/**
 * OCC
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Occ);
  }
}(this, function(expect, Occ) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Occ.PointOfServiceWsDTO();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('PointOfServiceWsDTO', function() {
    it('should create an instance of PointOfServiceWsDTO', function() {
      // uncomment below and update the code to test PointOfServiceWsDTO
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be.a(Occ.PointOfServiceWsDTO);
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property displayName (base name: "displayName")', function() {
      // uncomment below and update the code to test the property displayName
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property url (base name: "url")', function() {
      // uncomment below and update the code to test the property url
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property openingHours (base name: "openingHours")', function() {
      // uncomment below and update the code to test the property openingHours
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property storeContent (base name: "storeContent")', function() {
      // uncomment below and update the code to test the property storeContent
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property features (base name: "features")', function() {
      // uncomment below and update the code to test the property features
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property geoPoint (base name: "geoPoint")', function() {
      // uncomment below and update the code to test the property geoPoint
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property formattedDistance (base name: "formattedDistance")', function() {
      // uncomment below and update the code to test the property formattedDistance
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property distanceKm (base name: "distanceKm")', function() {
      // uncomment below and update the code to test the property distanceKm
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property mapIcon (base name: "mapIcon")', function() {
      // uncomment below and update the code to test the property mapIcon
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property address (base name: "address")', function() {
      // uncomment below and update the code to test the property address
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

    it('should have the property storeImages (base name: "storeImages")', function() {
      // uncomment below and update the code to test the property storeImages
      //var instane = new Occ.PointOfServiceWsDTO();
      //expect(instance).to.be();
    });

  });

}));
