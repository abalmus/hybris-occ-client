/**
 * OCC
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
    if (typeof define === 'function' && define.amd) {
    // AMD.
        define(['expect.js', '../config'], factory)
    } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
        factory(require('expect.js'), require('../config'))
    } else {
    // Browser globals (root is window)
        factory(root.expect, root.Occ)
    }
}(this, (expect, Occ) => {
    'use strict'

    let instance
    const {user} = Occ.default

    before((done) => {
        Occ.default.ApiClient.instance.requestAccessToken()
            .then(done)
    })

    after(() => {
        Occ.default.ApiClient.instance.clearAccessToken()
    })

    beforeEach(() => {
        instance = new Occ.default.ForgottenpasswordtokensApi()
    })

    const getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
        if (typeof object[getter] === 'function') { return object[getter]() } else { return object[property] }
    }

    const setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
        if (typeof object[setter] === 'function') { object[setter](value) } else { object[property] = value }
    }

    describe('ForgottenpasswordtokensApi', () => {
        describe('postForgottenPasswordToken', () => {
            it('should call postForgottenPasswordToken successfully', (done) => {
                instance.postForgottenPasswordToken({userId: user.uid})
                    .then((res) => {
                        done()
                    })
            })
        })
    })

}))
