/**
 * OCC
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../config'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../config'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Occ);
  }
}(this, function(expect, Occ) {
  'use strict';

  var instance;
  const {catalogId, catalogName, catalogVersionId} = Occ.default

  beforeEach(function() {
    instance = new Occ.default.CatalogsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CatalogsApi', function() {
    describe('catalogs', function() {
      it('should call catalogs successfully', function(done) {
        instance.catalogs()
          .then((res) => {
            // console.log(res.catalogs[0].catalogVersions[0])
            expect(res).to.have.property('catalogs');
            expect(res.catalogs).to.be.an('array');
            expect(res.catalogs.length).to.be.ok();
            done();
          })
      });
    });
    describe('catalogsByCatalogId', function() {
      it('should call catalogsByCatalogId successfully', function(done) {
        instance.catalogsByCatalogId(catalogId)
          .then((res) => {
            expect(res.name).to.be(catalogName);
            done();
          })
      });
    });
    describe('catalogsByCatalogIdAndCatalogVersionId', function() {
      it('should call catalogsByCatalogIdAndCatalogVersionId successfully', function(done) {
        // Test instance does not implement versions
        // instance.catalogsByCatalogIdAndCatalogVersionId(catalogId, '')
        //   .then((res) => {
        //     console.log(res)
        //     expect(res.name).to.be(catalogName);
        //     done();
        //   })
        //   .catch((err) => {
        //     console.log(err)
        //   })
        done();
      });
    });
    describe('catalogsCategoriesCategoryIdByCatalogId', function() {
      it('should call catalogsCategoriesCategoryIdByCatalogId successfully', function(done) {
        // Test instance does not implement versions
        // instance.catalogsByCatalogIdAndCatalogVersionId(catalogId, '')
        //   .then((res) => {
        //     console.log(res)
        //     expect(res.name).to.be(catalogName);
        //     done();
        //   })
        //   .catch((err) => {
        //     console.log(err)
        //   })
        done();
      });
    });
  });

}));
