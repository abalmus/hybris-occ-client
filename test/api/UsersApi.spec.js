/**
 * OCC
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../config'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../config'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.Occ);
  }
}(this, function(expect, Occ) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new Occ.default.UsersApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('UsersApi', function() {
    describe('users', function() {
      it('should call users successfully', function(done) {
        //uncomment below and update the code to test users
        //instance.users(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersAddressesByUserId', function() {
      it('should call usersAddressesByUserId successfully', function(done) {
        //uncomment below and update the code to test usersAddressesByUserId
        //instance.usersAddressesByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersAddressesByUserId1', function() {
      it('should call usersAddressesByUserId1 successfully', function(done) {
        //uncomment below and update the code to test usersAddressesByUserId1
        //instance.usersAddressesByUserId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersAddressesByUserIdAndAddressId', function() {
      it('should call usersAddressesByUserIdAndAddressId successfully', function(done) {
        //uncomment below and update the code to test usersAddressesByUserIdAndAddressId
        //instance.usersAddressesByUserIdAndAddressId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersAddressesByUserIdAndAddressId1', function() {
      it('should call usersAddressesByUserIdAndAddressId1 successfully', function(done) {
        //uncomment below and update the code to test usersAddressesByUserIdAndAddressId1
        //instance.usersAddressesByUserIdAndAddressId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersAddressesByUserIdAndAddressId2', function() {
      it('should call usersAddressesByUserIdAndAddressId2 successfully', function(done) {
        //uncomment below and update the code to test usersAddressesByUserIdAndAddressId2
        //instance.usersAddressesByUserIdAndAddressId2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersAddressesByUserIdAndAddressId3', function() {
      it('should call usersAddressesByUserIdAndAddressId3 successfully', function(done) {
        //uncomment below and update the code to test usersAddressesByUserIdAndAddressId3
        //instance.usersAddressesByUserIdAndAddressId3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersAddressesVerificationByUserId', function() {
      it('should call usersAddressesVerificationByUserId successfully', function(done) {
        //uncomment below and update the code to test usersAddressesVerificationByUserId
        //instance.usersAddressesVerificationByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersByUserId', function() {
      it('should call usersByUserId successfully', function(done) {
        //uncomment below and update the code to test usersByUserId
        //instance.usersByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersByUserId1', function() {
      it('should call usersByUserId1 successfully', function(done) {
        //uncomment below and update the code to test usersByUserId1
        //instance.usersByUserId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersByUserId2', function() {
      it('should call usersByUserId2 successfully', function(done) {
        //uncomment below and update the code to test usersByUserId2
        //instance.usersByUserId2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersByUserId3', function() {
      it('should call usersByUserId3 successfully', function(done) {
        //uncomment below and update the code to test usersByUserId3
        //instance.usersByUserId3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsAddressesDeliveryByUserId', function() {
      it('should call usersCartsAddressesDeliveryByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCartsAddressesDeliveryByUserId
        //instance.usersCartsAddressesDeliveryByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsAddressesDeliveryByUserId1', function() {
      it('should call usersCartsAddressesDeliveryByUserId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsAddressesDeliveryByUserId1
        //instance.usersCartsAddressesDeliveryByUserId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsAddressesDeliveryByUserId2', function() {
      it('should call usersCartsAddressesDeliveryByUserId2 successfully', function(done) {
        //uncomment below and update the code to test usersCartsAddressesDeliveryByUserId2
        //instance.usersCartsAddressesDeliveryByUserId2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsByUserId', function() {
      it('should call usersCartsByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCartsByUserId
        //instance.usersCartsByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsByUserId1', function() {
      it('should call usersCartsByUserId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsByUserId1
        //instance.usersCartsByUserId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsByUserIdAndCartId', function() {
      it('should call usersCartsByUserIdAndCartId successfully', function(done) {
        //uncomment below and update the code to test usersCartsByUserIdAndCartId
        //instance.usersCartsByUserIdAndCartId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsByUserIdAndCartId1', function() {
      it('should call usersCartsByUserIdAndCartId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsByUserIdAndCartId1
        //instance.usersCartsByUserIdAndCartId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsClonesavedcartByUserId', function() {
      it('should call usersCartsClonesavedcartByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCartsClonesavedcartByUserId
        //instance.usersCartsClonesavedcartByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsDeliverymodeByUserIdAndCartId', function() {
      it('should call usersCartsDeliverymodeByUserIdAndCartId successfully', function(done) {
        //uncomment below and update the code to test usersCartsDeliverymodeByUserIdAndCartId
        //instance.usersCartsDeliverymodeByUserIdAndCartId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsDeliverymodeByUserIdAndCartId1', function() {
      it('should call usersCartsDeliverymodeByUserIdAndCartId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsDeliverymodeByUserIdAndCartId1
        //instance.usersCartsDeliverymodeByUserIdAndCartId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsDeliverymodeByUserIdAndCartId2', function() {
      it('should call usersCartsDeliverymodeByUserIdAndCartId2 successfully', function(done) {
        //uncomment below and update the code to test usersCartsDeliverymodeByUserIdAndCartId2
        //instance.usersCartsDeliverymodeByUserIdAndCartId2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsDeliverymodesByUserIdAndCartId', function() {
      it('should call usersCartsDeliverymodesByUserIdAndCartId successfully', function(done) {
        //uncomment below and update the code to test usersCartsDeliverymodesByUserIdAndCartId
        //instance.usersCartsDeliverymodesByUserIdAndCartId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsEmailByUserIdAndCartId', function() {
      it('should call usersCartsEmailByUserIdAndCartId successfully', function(done) {
        //uncomment below and update the code to test usersCartsEmailByUserIdAndCartId
        //instance.usersCartsEmailByUserIdAndCartId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsEntriesByUserIdAndCartId', function() {
      it('should call usersCartsEntriesByUserIdAndCartId successfully', function(done) {
        //uncomment below and update the code to test usersCartsEntriesByUserIdAndCartId
        //instance.usersCartsEntriesByUserIdAndCartId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsEntriesByUserIdAndCartId1', function() {
      it('should call usersCartsEntriesByUserIdAndCartId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsEntriesByUserIdAndCartId1
        //instance.usersCartsEntriesByUserIdAndCartId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsEntriesEntryNumberByUserId', function() {
      it('should call usersCartsEntriesEntryNumberByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCartsEntriesEntryNumberByUserId
        //instance.usersCartsEntriesEntryNumberByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsEntriesEntryNumberByUserId1', function() {
      it('should call usersCartsEntriesEntryNumberByUserId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsEntriesEntryNumberByUserId1
        //instance.usersCartsEntriesEntryNumberByUserId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsEntriesEntryNumberByUserId2', function() {
      it('should call usersCartsEntriesEntryNumberByUserId2 successfully', function(done) {
        //uncomment below and update the code to test usersCartsEntriesEntryNumberByUserId2
        //instance.usersCartsEntriesEntryNumberByUserId2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsEntriesEntryNumberByUserId3', function() {
      it('should call usersCartsEntriesEntryNumberByUserId3 successfully', function(done) {
        //uncomment below and update the code to test usersCartsEntriesEntryNumberByUserId3
        //instance.usersCartsEntriesEntryNumberByUserId3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsFlagForDeletionByUserId', function() {
      it('should call usersCartsFlagForDeletionByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCartsFlagForDeletionByUserId
        //instance.usersCartsFlagForDeletionByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsPaymentdetailsByUserId', function() {
      it('should call usersCartsPaymentdetailsByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCartsPaymentdetailsByUserId
        //instance.usersCartsPaymentdetailsByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsPaymentdetailsByUserId1', function() {
      it('should call usersCartsPaymentdetailsByUserId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsPaymentdetailsByUserId1
        //instance.usersCartsPaymentdetailsByUserId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsPromotionsByUserIdAndCartId', function() {
      it('should call usersCartsPromotionsByUserIdAndCartId successfully', function(done) {
        //uncomment below and update the code to test usersCartsPromotionsByUserIdAndCartId
        //instance.usersCartsPromotionsByUserIdAndCartId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsPromotionsByUserIdAndCartId1', function() {
      it('should call usersCartsPromotionsByUserIdAndCartId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsPromotionsByUserIdAndCartId1
        //instance.usersCartsPromotionsByUserIdAndCartId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsPromotionsPromotionIdByUserId', function() {
      it('should call usersCartsPromotionsPromotionIdByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCartsPromotionsPromotionIdByUserId
        //instance.usersCartsPromotionsPromotionIdByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsPromotionsPromotionIdByUserId1', function() {
      it('should call usersCartsPromotionsPromotionIdByUserId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsPromotionsPromotionIdByUserId1
        //instance.usersCartsPromotionsPromotionIdByUserId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsRestoresavedcartByUserId', function() {
      it('should call usersCartsRestoresavedcartByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCartsRestoresavedcartByUserId
        //instance.usersCartsRestoresavedcartByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsSaveByUserIdAndCartId', function() {
      it('should call usersCartsSaveByUserIdAndCartId successfully', function(done) {
        //uncomment below and update the code to test usersCartsSaveByUserIdAndCartId
        //instance.usersCartsSaveByUserIdAndCartId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsSavedcartByUserIdAndCartId', function() {
      it('should call usersCartsSavedcartByUserIdAndCartId successfully', function(done) {
        //uncomment below and update the code to test usersCartsSavedcartByUserIdAndCartId
        //instance.usersCartsSavedcartByUserIdAndCartId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsVouchersByUserIdAndCartId', function() {
      it('should call usersCartsVouchersByUserIdAndCartId successfully', function(done) {
        //uncomment below and update the code to test usersCartsVouchersByUserIdAndCartId
        //instance.usersCartsVouchersByUserIdAndCartId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsVouchersByUserIdAndCartId1', function() {
      it('should call usersCartsVouchersByUserIdAndCartId1 successfully', function(done) {
        //uncomment below and update the code to test usersCartsVouchersByUserIdAndCartId1
        //instance.usersCartsVouchersByUserIdAndCartId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCartsVouchersVoucherIdByUserId', function() {
      it('should call usersCartsVouchersVoucherIdByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCartsVouchersVoucherIdByUserId
        //instance.usersCartsVouchersVoucherIdByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersCustomergroupsByUserId', function() {
      it('should call usersCustomergroupsByUserId successfully', function(done) {
        //uncomment below and update the code to test usersCustomergroupsByUserId
        //instance.usersCustomergroupsByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersLoginByUserId', function() {
      it('should call usersLoginByUserId successfully', function(done) {
        //uncomment below and update the code to test usersLoginByUserId
        //instance.usersLoginByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersOrdersByUserId1', function() {
      it('should call usersOrdersByUserId1 successfully', function(done) {
        //uncomment below and update the code to test usersOrdersByUserId1
        //instance.usersOrdersByUserId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersOrdersByUserId2', function() {
      it('should call usersOrdersByUserId2 successfully', function(done) {
        //uncomment below and update the code to test usersOrdersByUserId2
        //instance.usersOrdersByUserId2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersOrdersByUserIdAndCode', function() {
      it('should call usersOrdersByUserIdAndCode successfully', function(done) {
        //uncomment below and update the code to test usersOrdersByUserIdAndCode
        //instance.usersOrdersByUserIdAndCode(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPasswordByUserId', function() {
      it('should call usersPasswordByUserId successfully', function(done) {
        //uncomment below and update the code to test usersPasswordByUserId
        //instance.usersPasswordByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPaymentdetailsByUserId', function() {
      it('should call usersPaymentdetailsByUserId successfully', function(done) {
        //uncomment below and update the code to test usersPaymentdetailsByUserId
        //instance.usersPaymentdetailsByUserId(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPaymentdetailsByUserId1', function() {
      it('should call usersPaymentdetailsByUserId1 successfully', function(done) {
        //uncomment below and update the code to test usersPaymentdetailsByUserId1
        //instance.usersPaymentdetailsByUserId1(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPaymentdetailsByUserId2', function() {
      it('should call usersPaymentdetailsByUserId2 successfully', function(done) {
        //uncomment below and update the code to test usersPaymentdetailsByUserId2
        //instance.usersPaymentdetailsByUserId2(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPaymentdetailsByUserId3', function() {
      it('should call usersPaymentdetailsByUserId3 successfully', function(done) {
        //uncomment below and update the code to test usersPaymentdetailsByUserId3
        //instance.usersPaymentdetailsByUserId3(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('usersPaymentdetailsByUserId4', function() {
      it('should call usersPaymentdetailsByUserId4 successfully', function(done) {
        //uncomment below and update the code to test usersPaymentdetailsByUserId4
        //instance.usersPaymentdetailsByUserId4(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
