/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */
/* Copyright (c) 2017 Mobify Research & Development Inc. All rights reserved. */
/* * *  *  * *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  * */

/**
 * OCC No description provided (generated by Swagger Codegen
 * https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git Do not edit the class
 * manually.
 *
 */

import ApiClient from '../ApiClient'
import Address from './Address'
import GeoPoint from './GeoPoint'
import Image from './Image'
import OpeningSchedule from './OpeningSchedule'

/**
* The PointOfService model module.
* @module models/PointOfService
* @version v2
*/
export default class PointOfService {
    /**
    * Constructs a new <code>PointOfService</code>.
    * @alias module:models/PointOfService
    * @class
    */

    constructor() {
        /**
    *
    * @member {String} name
    */
        this.name = undefined
        /**
    *
    * @member {String} displayName
    */
        this.displayName = undefined
        /**
    *
    * @member {String} url
    */
        this.url = undefined
        /**
    *
    * @member {String} description
    */
        this.description = undefined
        /**
    * @member {module:models/OpeningSchedule} openingHours
    */
        this.openingHours = undefined
        /**
    *
    * @member {String} storeContent
    */
        this.storeContent = undefined
        /**
    *
    * @member {Object} features
    */
        this.features = undefined
        /**
    * @member {module:models/GeoPoint} geoPoint
    */
        this.geoPoint = undefined
        /**
    *
    * @member {String} formattedDistance
    */
        this.formattedDistance = undefined
        /**
    *
    * @member {Number} distanceKm
    */
        this.distanceKm = undefined
        /**
    * @member {module:models/Image} mapIcon
    */
        this.mapIcon = undefined
        /**
    * @member {module:models/Address} address
    */
        this.address = undefined
        /**
    *
    * @member {Array.<module:models/Image>} storeImages
    */
        this.storeImages = undefined
    }

    /**
    * Constructs a <code>PointOfService</code> from a plain JavaScript
    * object, optionally creating a new instance. Copies all relevant properties
    * from <code>data</code> to <code>obj</code> if supplied or a new instance
    * if not.
    * @param {Object} data The plain JavaScript object bearing properties of
    * interest.
    * @param {module:models/PointOfService} obj Optional instance to
    * populate.
    * @return {module:models/PointOfService} The populated
    * <code>PointOfService</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new PointOfService()

            if (data.hasOwnProperty('name')) {
                obj.name = ApiClient.convertToType(data.name, 'String')
            }
            if (data.hasOwnProperty('displayName')) {
                obj.displayName = ApiClient.convertToType(data.displayName, 'String')
            }
            if (data.hasOwnProperty('url')) {
                obj.url = ApiClient.convertToType(data.url, 'String')
            }
            if (data.hasOwnProperty('description')) {
                obj.description = ApiClient.convertToType(data.description, 'String')
            }
            if (data.hasOwnProperty('openingHours')) {
                obj.openingHours = OpeningSchedule.constructFromObject(data.openingHours)
            }
            if (data.hasOwnProperty('storeContent')) {
                obj.storeContent = ApiClient.convertToType(data.storeContent, 'String')
            }
            if (data.hasOwnProperty('features')) {
                obj.features = ApiClient.convertToType(data.features, Object)
            }
            if (data.hasOwnProperty('geoPoint')) {
                obj.geoPoint = GeoPoint.constructFromObject(data.geoPoint)
            }
            if (data.hasOwnProperty('formattedDistance')) {
                obj.formattedDistance = ApiClient.convertToType(data.formattedDistance, 'String')
            }
            if (data.hasOwnProperty('distanceKm')) {
                obj.distanceKm = ApiClient.convertToType(data.distanceKm, 'Number')
            }
            if (data.hasOwnProperty('mapIcon')) {
                obj.mapIcon = Image.constructFromObject(data.mapIcon)
            }
            if (data.hasOwnProperty('address')) {
                obj.address = Address.constructFromObject(data.address)
            }
            if (data.hasOwnProperty('storeImages')) {
                obj.storeImages = ApiClient.convertToType(data.storeImages, [Image])
            }
        }
        return obj
    }



}
