#%RAML 0.8
---
title: OCC
baseUri: http://api-example.hybris.com/rest/v2/{baseSiteId}
version: v2
baseUriParameters:
  baseSiteId:
    description: Id of the base site.
mediaType: application/json
securitySchemes:
    - OAuth2:
        description: |
            OCC supports OAuth 2.0 for authenticating all API requests.
        type: OAuth 2.0
        describedBy:
            headers:
                Authorization:
                    description: |
                       Used to send a valid OAuth 2 access token. Do not use.
                       with the "access_token" query string parameter.
                    type: string
            queryParameters:
                access_token:
                    description: |
                       Used to send a valid OAuth 2 access token. Do not use together with.
                       the "Authorization" header
                    type: string
            responses:
                401:
                    description: |
                        Bad or expired token. This can happen if the user or OCC
                        revoked or expired an access token. To fix, you should re-
                        authenticate the user.
                403:
                    description: |
                        Bad OAuth request (wrong consumer key, bad nonce, expired
                        timestamp...). Unfortunately, re-authenticating the user won't help here.
        settings:
          authorizationUri: http://api-example.hybris.com/rest/authorizationserver/authorize
          accessTokenUri: http://api-example.hybris.com/rest/authorizationserver/token
          authorizationGrants: [ code, token ]
schemas: 
- response./cardtypes.GET.200.application/json: !include response..cardtypes.GET.200.application.json.json
- response./catalogs.GET.200.application/json: !include response..catalogs.GET.200.application.json.json
- response./catalogs/{catalogId}.GET.200.application/json: !include response..catalogs..catalogId..GET.200.application.json.json
- response./catalogs/{catalogId}/{catalogVersionId}.GET.200.application/json: !include response..catalogs..catalogId...catalogVersionId..GET.200.application.json.json
- response./catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}.GET.200.application/json: !include response..catalogs..catalogId...catalogVersionId..categories..categoryId..GET.200.application.json.json
- response./currencies.GET.200.application/json: !include response..currencies.GET.200.application.json.json
- request./customergroups.POST.application/json: !include request..customergroups.POST.application.json.json
- response./customergroups.GET.200.application/json: !include response..customergroups.GET.200.application.json.json
- response./customergroups/{groupId}.GET.200.application/json: !include response..customergroups..groupId..GET.200.application.json.json
- request./customergroups/{groupId}/members.PATCH.application/json: !include request..customergroups..groupId..members.PATCH.application.json.json
- request./customergroups/{groupId}/members.PUT.application/json: !include request..customergroups..groupId..members.PUT.application.json.json
- response./deliverycountries.GET.200.application/json: !include response..deliverycountries.GET.200.application.json.json
- response./export/products.GET.200.application/json: !include response..export.products.GET.200.application.json.json
- response./feeds/orders/statusfeed.GET.200.application/json: !include response..feeds.orders.statusfeed.GET.200.application.json.json
- response./languages.GET.200.application/json: !include response..languages.GET.200.application.json.json
- response./orders/{code}.GET.200.application/json: !include response..orders..code..GET.200.application.json.json
- response./products/expressupdate.GET.200.application/json: !include response..products.expressupdate.GET.200.application.json.json
- response./products/search.GET.200.application/json: !include response..products.search.GET.200.application.json.json
- response./products/suggestions.GET.200.application/json: !include response..products.suggestions.GET.200.application.json.json
- response./products/{productCode}.GET.200.application/json: !include response..products..productCode..GET.200.application.json.json
- response./products/{productCode}/references.GET.200.application/json: !include response..products..productCode..references.GET.200.application.json.json
- response./products/{productCode}/reviews.GET.200.application/json: !include response..products..productCode..reviews.GET.200.application.json.json
- response./products/{productCode}/reviews.POST.201.application/json: !include response..products..productCode..reviews.POST.201.application.json.json
- request./products/{productCode}/reviews.POST.application/json: !include request..products..productCode..reviews.POST.application.json.json
- response./products/{productCode}/reviews.POST.201.application/json: !include response..products..productCode..reviews.POST.201.application.json.json
- response./products/{productCode}/stock.GET.200.application/json: !include response..products..productCode..stock.GET.200.application.json.json
- response./products/{productCode}/stock/{storeName}.GET.200.application/json: !include response..products..productCode..stock..storeName..GET.200.application.json.json
- response./promotions.GET.200.application/json: !include response..promotions.GET.200.application.json.json
- response./promotions/{code}.GET.200.application/json: !include response..promotions..code..GET.200.application.json.json
- response./stores.GET.200.application/json: !include response..stores.GET.200.application.json.json
- response./stores/{storeId}.GET.200.application/json: !include response..stores..storeId..GET.200.application.json.json
- response./titles.GET.200.application/json: !include response..titles.GET.200.application.json.json
- request./users.POST.application/json: !include request..users.POST.application.json.json
- response./users/{userId}.GET.200.application/json: !include response..users..userId..GET.200.application.json.json
- request./users/{userId}.PUT.application/json: !include request..users..userId..PUT.application.json.json
- request./users/{userId}.PATCH.application/json: !include request..users..userId..PATCH.application.json.json
- response./users/{userId}/addresses.GET.200.application/json: !include response..users..userId..addresses.GET.200.application.json.json
- response./users/{userId}/addresses.POST.201.application/json: !include response..users..userId..addresses.POST.201.application.json.json
- request./users/{userId}/addresses.POST.application/json: !include request..users..userId..addresses.POST.application.json.json
- response./users/{userId}/addresses.POST.201.application/json: !include response..users..userId..addresses.POST.201.application.json.json
- response./users/{userId}/addresses/verification.POST.200.application/json: !include response..users..userId..addresses.verification.POST.200.application.json.json
- request./users/{userId}/addresses/verification.POST.application/json: !include request..users..userId..addresses.verification.POST.application.json.json
- response./users/{userId}/addresses/verification.POST.200.application/json: !include response..users..userId..addresses.verification.POST.200.application.json.json
- response./users/{userId}/addresses/{addressId}.GET.200.application/json: !include response..users..userId..addresses..addressId..GET.200.application.json.json
- request./users/{userId}/addresses/{addressId}.PUT.application/json: !include request..users..userId..addresses..addressId..PUT.application.json.json
- request./users/{userId}/addresses/{addressId}.PATCH.application/json: !include request..users..userId..addresses..addressId..PATCH.application.json.json
- response./users/{userId}/carts.GET.200.application/json: !include response..users..userId..carts.GET.200.application.json.json
- response./users/{userId}/carts.POST.201.application/json: !include response..users..userId..carts.POST.201.application.json.json
- response./users/{userId}/carts/{cartId}.GET.200.application/json: !include response..users..userId..carts..cartId..GET.200.application.json.json
- response./users/{userId}/carts/{cartId}/addresses/delivery.POST.201.application/json: !include response..users..userId..carts..cartId..addresses.delivery.POST.201.application.json.json
- request./users/{userId}/carts/{cartId}/addresses/delivery.POST.application/json: !include request..users..userId..carts..cartId..addresses.delivery.POST.application.json.json
- response./users/{userId}/carts/{cartId}/addresses/delivery.POST.201.application/json: !include response..users..userId..carts..cartId..addresses.delivery.POST.201.application.json.json
- response./users/{userId}/carts/{cartId}/clonesavedcart.POST.200.application/json: !include response..users..userId..carts..cartId..clonesavedcart.POST.200.application.json.json
- response./users/{userId}/carts/{cartId}/deliverymode.GET.200.application/json: !include response..users..userId..carts..cartId..deliverymode.GET.200.application.json.json
- response./users/{userId}/carts/{cartId}/deliverymodes.GET.200.application/json: !include response..users..userId..carts..cartId..deliverymodes.GET.200.application.json.json
- response./users/{userId}/carts/{cartId}/entries.GET.200.application/json: !include response..users..userId..carts..cartId..entries.GET.200.application.json.json
- response./users/{userId}/carts/{cartId}/entries.POST.200.application/json: !include response..users..userId..carts..cartId..entries.POST.200.application.json.json
- request./users/{userId}/carts/{cartId}/entries.POST.application/json: !include request..users..userId..carts..cartId..entries.POST.application.json.json
- response./users/{userId}/carts/{cartId}/entries.POST.200.application/json: !include response..users..userId..carts..cartId..entries.POST.200.application.json.json
- response./users/{userId}/carts/{cartId}/entries/{entryNumber}.GET.200.application/json: !include response..users..userId..carts..cartId..entries..entryNumber..GET.200.application.json.json
- response./users/{userId}/carts/{cartId}/entries/{entryNumber}.PUT.200.application/json: !include response..users..userId..carts..cartId..entries..entryNumber..PUT.200.application.json.json
- request./users/{userId}/carts/{cartId}/entries/{entryNumber}.PUT.application/json: !include request..users..userId..carts..cartId..entries..entryNumber..PUT.application.json.json
- response./users/{userId}/carts/{cartId}/entries/{entryNumber}.PUT.200.application/json: !include response..users..userId..carts..cartId..entries..entryNumber..PUT.200.application.json.json
- response./users/{userId}/carts/{cartId}/entries/{entryNumber}.PATCH.200.application/json: !include response..users..userId..carts..cartId..entries..entryNumber..PATCH.200.application.json.json
- request./users/{userId}/carts/{cartId}/entries/{entryNumber}.PATCH.application/json: !include request..users..userId..carts..cartId..entries..entryNumber..PATCH.application.json.json
- response./users/{userId}/carts/{cartId}/entries/{entryNumber}.PATCH.200.application/json: !include response..users..userId..carts..cartId..entries..entryNumber..PATCH.200.application.json.json
- response./users/{userId}/carts/{cartId}/flagForDeletion.PATCH.200.application/json: !include response..users..userId..carts..cartId..flagForDeletion.PATCH.200.application.json.json
- response./users/{userId}/carts/{cartId}/paymentdetails.POST.201.application/json: !include response..users..userId..carts..cartId..paymentdetails.POST.201.application.json.json
- request./users/{userId}/carts/{cartId}/paymentdetails.POST.application/json: !include request..users..userId..carts..cartId..paymentdetails.POST.application.json.json
- response./users/{userId}/carts/{cartId}/paymentdetails.POST.201.application/json: !include response..users..userId..carts..cartId..paymentdetails.POST.201.application.json.json
- response./users/{userId}/carts/{cartId}/promotions.GET.200.application/json: !include response..users..userId..carts..cartId..promotions.GET.200.application.json.json
- response./users/{userId}/carts/{cartId}/promotions/{promotionId}.GET.200.application/json: !include response..users..userId..carts..cartId..promotions..promotionId..GET.200.application.json.json
- response./users/{userId}/carts/{cartId}/restoresavedcart.PATCH.200.application/json: !include response..users..userId..carts..cartId..restoresavedcart.PATCH.200.application.json.json
- response./users/{userId}/carts/{cartId}/save.PATCH.200.application/json: !include response..users..userId..carts..cartId..save.PATCH.200.application.json.json
- response./users/{userId}/carts/{cartId}/savedcart.GET.200.application/json: !include response..users..userId..carts..cartId..savedcart.GET.200.application.json.json
- response./users/{userId}/carts/{cartId}/vouchers.GET.200.application/json: !include response..users..userId..carts..cartId..vouchers.GET.200.application.json.json
- response./users/{userId}/customergroups.GET.200.application/json: !include response..users..userId..customergroups.GET.200.application.json.json
- response./users/{userId}/orders.GET.200.application/json: !include response..users..userId..orders.GET.200.application.json.json
- response./users/{userId}/orders.POST.201.application/json: !include response..users..userId..orders.POST.201.application.json.json
- response./users/{userId}/orders/{code}.GET.200.application/json: !include response..users..userId..orders..code..GET.200.application.json.json
- response./users/{userId}/paymentdetails.GET.200.application/json: !include response..users..userId..paymentdetails.GET.200.application.json.json
- response./users/{userId}/paymentdetails/{paymentDetailsId}.GET.200.application/json: !include response..users..userId..paymentdetails..paymentDetailsId..GET.200.application.json.json
- request./users/{userId}/paymentdetails/{paymentDetailsId}.PATCH.application/json: !include request..users..userId..paymentdetails..paymentDetailsId..PATCH.application.json.json
- request./users/{userId}/paymentdetails/{paymentDetailsId}.PUT.application/json: !include request..users..userId..paymentdetails..paymentDetailsId..PUT.application.json.json
- response./vouchers/{code}.GET.200.application/json: !include response..vouchers..code..GET.200.application.json.json
/cardtypes:
  get:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.MiscsController.getCardTypes(String)
    description: |
      Lists supported payment card types.

    queryParameters:
      fields:
        required: false
        default: DEFAULT
        description: |
          Response configuration (list of fields, which should be returned in response)

    responses:
      200:
        body:
          application/json:
            schema: response./cardtypes.GET.200.application/json
/catalogs:
  get:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.CatalogsController.getCatalogs(String)
    description: |
      Returns all catalogs with versions defined for the base store.

    queryParameters:
      fields:
        required: false
        default: DEFAULT
        description: |
          Response configuration (list of fields, which should be returned in response)

    responses:
      200:
        body:
          application/json:
            schema: response./catalogs.GET.200.application/json
  /{catalogId}:
    uriParameters:
      catalogId:
        description: |
          Catalog identifier

    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.CatalogsController.getCatalog(String, String)
      description: |
        Returns a information about a catalog based on its ID, along with versions defined for the current base store.

      queryParameters:
        fields:
          required: false
          default: DEFAULT
          description: |
            Response configuration (list of fields, which should be returned in response)

      responses:
        200:
          body:
            application/json:
              schema: response./catalogs/{catalogId}.GET.200.application/json
    /{catalogVersionId}:
      uriParameters:
        catalogVersionId:
          description: |
            Catalog version identifier

      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.CatalogsController.getCatalogVersion(String, String, String)
        description: |
          Returns information about catalog version that exists for the current base store.

        queryParameters:
          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in response)

        responses:
          200:
            body:
              application/json:
                schema: response./catalogs/{catalogId}/{catalogVersionId}.GET.200.application/json
      /categories:
        /{categoryId}:
          uriParameters:
            categoryId:
              description: |
                Category identifier

          get:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CatalogsController.getCategories(String, String, String, String)
            description: |
              Returns information about category that exists in a catalog version available for the current base store.

            queryParameters:
              pageSize:
                required: false
                description: |
                  The number of results returned per page.

              currentPage:
                required: false
                description: |
                  The current result page requested.

              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            responses:
              200:
                body:
                  application/json:
                    schema: response./catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}.GET.200.application/json
/currencies:
  get:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.MiscsController.getCurrencies(String)
    description: |
      Lists all available currencies (all usable currencies for the current store).If the list of currencies for stores is empty, a list of all currencies available in the system is returned.

    queryParameters:
      fields:
        required: false
        default: DEFAULT
        description: |
          Response configuration (list of fields, which should be returned in response)

    responses:
      200:
        body:
          application/json:
            schema: response./currencies.GET.200.application/json
/customergroups:
  get:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.CustomerGroupsController.getAllCustomerGroups(int, int, String)
    description: |
      Returns all customer groups that are direct subgroups of a customergroup.

      Security: Permitted only for customer managers

    queryParameters:
      pageSize:
        required: false
        default: 20
        description: |
          Number of customer group returned in one page

      currentPage:
        required: false
        default: 0
        description: |
          Current page number (starts with 0)

      fields:
        required: false
        default: BASIC
        description: |
          Response configuration (list of fields, which should be returned in response)

    responses:
      200:
        body:
          application/json:
            schema: response./customergroups.GET.200.application/json
  post:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.CustomerGroupsController.createNewCustomerGroup(String, String), de.hybris.platform.ycommercewebservices.v2.controller.CustomerGroupsController.createNewCustomerGroup(UserGroupWsDTO)
    description: |
      Creates a new customer group that is a direct subgroup of a customergroup.

      Security: Permitted only for customer managers

    body:
      application/x-www-form-urlencoded:
        formParameters:
          localizedName:
            required: false
            description: |
              Name in current locale.

          groupId:
            required: false
            description: |
              Id of new customer group.

      application/json:
        schema: request./customergroups.POST.application/json
    responses:
      201:
  /{groupId}:
    uriParameters:
      groupId:
        description: |
          Group identifier

    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.CustomerGroupsController.getCustomerGroup(String, String)
      description: |
        Returns a customer group with a specific groupId.

        Security: Permitted only for customer managers

      queryParameters:
        fields:
          required: false
          default: BASIC
          description: |
            Response configuration (list of fields, which should be returned in response)

      responses:
        200:
          body:
            application/json:
              schema: response./customergroups/{groupId}.GET.200.application/json
    /members:
      put:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.CustomerGroupsController.setUserListForCustomerGroup(String, MemberListWsDTO), de.hybris.platform.ycommercewebservices.v2.controller.CustomerGroupsController.setUserListForCustomerGroup(String, List<String>)
        description: |
          Sets members for a user group. The list of existing members is overwritten with a new one.

          Security: Permitted only for customer managers

        body:
          application/x-www-form-urlencoded:
            formParameters:
              members:
                required: false
                description: |
                  List of users id to set for customer group.. List should be in form: members=uid1&members=uid2...

          application/json:
            schema: request./customergroups/{groupId}/members.PUT.application/json
        responses:
          200:
      patch:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.CustomerGroupsController.assignUserToCustomerGroup(String, List<String>), de.hybris.platform.ycommercewebservices.v2.controller.CustomerGroupsController.assignUserToCustomerGroup(String, MemberListWsDTO)
        description: |
          Assigns user(s) to a customer group.

          Security: Permitted only for customer managers

        body:
          application/x-www-form-urlencoded:
            formParameters:
              members:
                required: false
                description: |
                  List of users ids to assign to customer group. List should be in form: members=uid1&members=uid2...

          application/json:
            schema: request./customergroups/{groupId}/members.PATCH.application/json
        responses:
          200:
      /{userId}:
        uriParameters:
          userId:
            description: |
              User identifier

        delete:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.CustomerGroupsController.removeUsersFromCustomerGroup(String, String)
          description: |
            Removes user from a customer group.

            Security: Permitted only for customer managers

          responses:
            200:
/deliverycountries:
  get:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.MiscsController.getDeliveryCountries(String)
    description: |
      Lists all supported delivery countries for the current store. The list is sorted alphabetically.

    queryParameters:
      fields:
        required: false
        default: DEFAULT
        description: |
          Response configuration (list of fields, which should be returned in response)

    responses:
      200:
        body:
          application/json:
            schema: response./deliverycountries.GET.200.application/json
/export:
  /products:
    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.ExportController.exportProducts(String, int, int, String, String, String)
      description: |
        Used for product export. Depending on the timestamp parameter, it can return all products or only products modified after the given time.

        Security: Allowed only for trusted client

      queryParameters:
        catalog:
          required: false
          description: |
            Catalog from which get products. Must be provided along with version.

        pageSize:
          required: false
          default: 2147483647
          description: |
            The number of results returned per page.

        fields:
          required: false
          default: DEFAULT
          description: |
            Response configuration (list of fields, which should be returned in response)

        currentPage:
          required: false
          default: 0
          description: |
            The current result page requested.

        version:
          required: false
          description: |
            Catalog version. Must be provided along with catalog.

        timestamp:
          required: false
          description: |
            When this parameter is set, only products modified after given time will be returned.This parameter should be in RFC-8601 format.

      responses:
        200:
          body:
            application/json:
              schema: response./export/products.GET.200.application/json
/feeds:
  /orders:
    /statusfeed:
      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.FeedsController.orderStatusFeed(String, String, String)
        description: |
          Returns the orders the status has changed for. Returns only the elements from the current baseSite, updated after the provided timestamp.

          Security: Allowed only for trusted client

        queryParameters:
          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in response)

          timestamp:
            required: false
            description: |
              Only items newer than the given parameter are retrieved. This parameter should be in RFC-8601 format.

        responses:
          200:
            body:
              application/json:
                schema: response./feeds/orders/statusfeed.GET.200.application/json
/forgottenpasswordtokens:
  post:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.ForgottenPasswordsController.restorePassword(String)
    description: |
      Generates a token to restore customer's forgotten password.

      Security: Allowed only for client or trusted client

    body:
      application/x-www-form-urlencoded:
        formParameters:
          userId:
            required: false
            description: |
              Customer's user id. Customer user id is case insensitive.

    responses:
      202:
/languages:
  get:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.MiscsController.getLanguages(String)
    description: |
      Lists all available languages (all languages used for a particular store). If the list of languages for a base store is empty, a list of all languages available in the system will be returned.

    queryParameters:
      fields:
        required: false
        default: DEFAULT
        description: |
          Response configuration (list of fields, which should be returned in response)

    responses:
      200:
        body:
          application/json:
            schema: response./languages.GET.200.application/json
/orders:
  /{code}:
    uriParameters:
      code:
        description: |
          Order GUID (Globally Unique Identifier) or order CODE

    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.OrdersController.getOrder(String, String)
      description: |
        Returns details of a specific order based on order GUID (Globally Unique Identifier) or order CODE. The response contains a detailed order information.

        Security: Allowed only for trusted client

      queryParameters:
        fields:
          required: false
          default: DEFAULT
          description: |
            Response configuration (list of fields, which should be returned in response)

      responses:
        200:
          body:
            application/json:
              schema: response./orders/{code}.GET.200.application/json
/products:
  /expressupdate:
    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.expressUpdate(String, String, String)
      description: |
        Returns products added to the express update feed. Returns only elements updated after the provided timestamp.The queue is cleared using a defined cronjob.

        Security: Permitted only for trusted client

      queryParameters:
        catalog:
          required: false
          description: |
            Only products from this catalog are returned. Format: <b>catalogId:catalogVersion</b>

        fields:
          required: false
          default: DEFAULT
          description: |
            Response configuration (list of fields, which should be returned in response)

        timestamp:
          required: false
          description: |
            Only items newer than the given parameter are retrieved from the queue. This parameter should be in RFC-8601 format.

      responses:
        200:
          body:
            application/json:
              schema: response./products/expressupdate.GET.200.application/json
  /search:
    head:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.countSearchProducts(String, HttpServletResponse)
      description: |
        Returns X-Total-Count header with total number of products satisfying a query. It doesn't return HTTP body.

      queryParameters:
        query:
          required: false
          description: |
            Serialized query, free text search, facets.<br> The format of a serialized query: <b>freeTextSearch:sort:facetKey1:facetValue1:facetKey2:facetValue2</b>

      responses:
        200:
    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.searchProducts(String, int, int, String, String, HttpServletResponse)
      description: |
        Returns a list of products and additional data such as: available facets, available sorting and pagination options. It can include spelling suggestions.To make spelling suggestions work you need to: <ul> <li>Make sure enableSpellCheck on the SearchQuery is set to true. By default it should be already set to true. </li> <li>Have indexed properties configured to be used for spellchecking.</li> </ul>

      queryParameters:
        query:
          required: false
          description: |
            Serialized query, free text search, facets.<br> The format of a serialized query: <b>freeTextSearch:sort:facetKey1:facetValue1:facetKey2:facetValue2</b>

        pageSize:
          required: false
          default: 20
          description: |
            The number of results returned per page.

        sort:
          required: false
          description: |
            Sorting method applied to the display search results.

        currentPage:
          required: false
          default: 0
          description: |
            The current result page requested.

        fields:
          required: false
          default: DEFAULT
          description: |
            Response configuration (list of fields, which should be returned in response)

      responses:
        200:
          body:
            application/json:
              schema: response./products/search.GET.200.application/json
  /suggestions:
    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.getSuggestions(String, int, String)
      description: |
        Returns a list of all available suggestions related to a given term and limits the results to a specific value of the max parameter.

      queryParameters:
        max:
          required: true
          default: 10
          description: |
            Specifies the limit of results.

        term:
          required: true
          description: |
            Specified term

        fields:
          required: false
          default: DEFAULT
          description: |
            Response configuration (list of fields, which should be returned in response)

      responses:
        200:
          body:
            application/json:
              schema: response./products/suggestions.GET.200.application/json
  /{productCode}:
    uriParameters:
      productCode:
        description: |
          Product identifier

    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.getProductByCode(String, String)
      description: |
        Returns details of a single product according to a product code.

      queryParameters:
        fields:
          required: false
          default: DEFAULT
          description: |
            Response configuration (list of fields, which should be returned in response)

      responses:
        200:
          body:
            application/json:
              schema: response./products/{productCode}.GET.200.application/json
    /references:
      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.exportProductReferences(String, int, String, String)
        description: |
          Returns references for a product with a given product code. Reference type specifies which references to return.

          Security: Permitted only for trusted client

        queryParameters:
          pageSize:
            required: false
            default: 2147483647
            description: |
              Maximum size of returned results.

          referenceType:
            required: false
            description: |
              Reference type according to enum ProductReferenceTypeEnum

          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in response)

        responses:
          200:
            body:
              application/json:
                schema: response./products/{productCode}/references.GET.200.application/json
    /reviews:
      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.getProductReviews(String, Integer, String)
        description: |
          Returns the reviews for a product with a given product code.

        responses:
          200:
            body:
              application/json:
                schema: response./products/{productCode}/reviews.GET.200.application/json
      post:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.createReview(String, ReviewWsDTO, String), de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.createReview(String, String, HttpServletRequest)
        description: |
          Creates a new customer review as an anonymous user.

        queryParameters:
          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in response)

        body:
          application/x-www-form-urlencoded:
            formParameters:
              rating:
                required: false
                description: |
                  This parameter is required. Value needs to be between 1 and 5.

              alias:
                required: false
              comment:
                required: false
                description: |
                  This parameter is required.

              headline:
                required: false
                description: |
                  This parameter is required.

          application/json:
            schema: request./products/{productCode}/reviews.POST.application/json
        responses:
          201:
            body:
              application/json:
                schema: response./products/{productCode}/reviews.POST.201.application/json
    /stock:
      head:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.countSearchProductStockByLocation(String, String, Double, Double, HttpServletResponse)
        description: |
          Returns X-Total-Count header with a total number of product's stock levels. It does not return the HTTP body. The following two sets of parameters are available: <ul> <li>location (required) or</li> <li>longitude (required), latitude (required).</li> </ul>

        queryParameters:
          latitude:
            required: false
            description: |
              Longitude location parameter.

          location:
            required: false
            description: |
              Free-text location

          longitude:
            required: false
            description: |
              Latitude location parameter.

        responses:
          200:
      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.searchProductStockByLocation(String, String, Double, Double, int, int, String, HttpServletResponse)
        description: |
          Returns product's stock levels sorted by distance from specific location passed by free-text parameter or longitude and latitude parameters. The following two sets of parameters are available: <ul> <li>location (required), currentPage (optional), pageSize (optional) or</li>> <li>longitude (required), latitude (required), currentPage (optional), pageSize(optional).</li> </ul>

        queryParameters:
          latitude:
            required: false
            description: |
              Longitude location parameter.

          pageSize:
            required: false
            default: 20
            description: |
              The number of results returned per page.

          location:
            required: false
            description: |
              Free-text location

          currentPage:
            required: false
            default: 0
            description: |
              The current result page requested.

          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in response)

          longitude:
            required: false
            description: |
              Latitude location parameter.

        responses:
          200:
            body:
              application/json:
                schema: response./products/{productCode}/stock.GET.200.application/json
      /{storeName}:
        uriParameters:
          storeName:
            description: |
              Store identifier

        get:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.ProductsController.getStockData(String, String, String, String)
          description: |
            Returns product's stock level for a particular store (POS).

          queryParameters:
            fields:
              required: false
              default: DEFAULT
              description: |
                Response configuration (list of fields, which should be returned in response)

          responses:
            200:
              body:
                application/json:
                  schema: response./products/{productCode}/stock/{storeName}.GET.200.application/json
/promotions:
  get:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.PromotionsController.getPromotions(String, String, String)
    description: |
      Returns promotions defined for a current base site. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.

      Security: Permitted only for trusted client

    queryParameters:
      promotionGroup:
        required: false
        description: |
          Only promotions from this group are returned

      type:
        required: false
        description: |
          Defines what type of promotions should be returned. Values supported for that parameter are: <ul> <li>all: All available promotions are returned</li> <li>product: Only product promotions are returned</li> <li>order: Only order promotions are returned</li> </ul>

      fields:
        required: false
        default: BASIC
        description: |
          Response configuration (list of fields, which should be returned in response)

    responses:
      200:
        body:
          application/json:
            schema: response./promotions.GET.200.application/json
  /{code}:
    uriParameters:
      code:
        description: |
          Promotion identifier (code)

    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.PromotionsController.getPromotionByCode(String, String)
      description: |
        Returns details of a single promotion specified by a promotion code. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.

        Security: Permitted only for trusted client

      queryParameters:
        fields:
          required: false
          default: BASIC
          description: |
            Response configuration (list of fields, which should be returned in response)

      responses:
        200:
          body:
            application/json:
              schema: response./promotions/{code}.GET.200.application/json
/stores:
  head:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.StoresController.countLocationSearch(String, Double, Double, double, double, HttpServletResponse)
    description: |
      Returns X-Total-Count header with the number of all store locations that are near the location specified in a query, or based on latitude and longitude.

    queryParameters:
      query:
        required: false
        description: |
          Location in natural language i.e. city or country.

      latitude:
        required: false
        description: |
          Coordinate that specifies the north-south position of a point on the Earth's surface.

      accuracy:
        required: false
        default: 0.0
        description: |
          Accuracy in meters.

      radius:
        required: false
        default: 100000.0
        description: |
          Radius in meters. Max value: 40075000.0 (Earth's perimeter).

      longitude:
        required: false
        description: |
          Coordinate that specifies the east-west position of a point on the Earth's surface.

    responses:
      200:
  get:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.StoresController.locationSearch(String, Double, Double, int, int, String, double, double, String, HttpServletResponse)
    description: |
      Lists all store locations that are near the location specified in a query or based on latitude and longitude.

    queryParameters:
      query:
        required: false
        description: |
          Location in natural language i.e. city or country.

      latitude:
        required: false
        description: |
          Coordinate that specifies the north-south position of a point on the Earth's surface.

      pageSize:
        required: false
        default: 20
        description: |
          The number of results returned per page.

      accuracy:
        required: false
        default: 0.0
        description: |
          Accuracy in meters.

      sort:
        required: false
        default: asc
        description: |
          Sorting method applied to the return results.

      currentPage:
        required: false
        default: 0
        description: |
          The current result page requested.

      radius:
        required: false
        default: 100000.0
        description: |
          Radius in meters. Max value: 40075000.0 (Earth's perimeter).

      fields:
        required: false
        default: DEFAULT
        description: |
          Response configuration (list of fields, which should be returned in response)

      longitude:
        required: false
        description: |
          Coordinate that specifies the east-west position of a point on the Earth's surface.

    responses:
      200:
        body:
          application/json:
            schema: response./stores.GET.200.application/json
  /{storeId}:
    uriParameters:
      storeId:
        description: |
          Store identifier (currently store name)

    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.StoresController.locationDetails(String, String)
      description: |
        Returns store location based on its unique name.

      queryParameters:
        fields:
          required: false
          default: DEFAULT
          description: |
            Response configuration (list of fields, which should be returned in response)

      responses:
        200:
          body:
            application/json:
              schema: response./stores/{storeId}.GET.200.application/json
/titles:
  get:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.MiscsController.getTitles(String)
    description: |
      Lists all localized titles.

    queryParameters:
      fields:
        required: false
        default: DEFAULT
        description: |
          Response configuration (list of fields, which should be returned in response)

    responses:
      200:
        body:
          application/json:
            schema: response./titles.GET.200.application/json
/users:
  post:
    #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.registerUser(String, String, String, String, String, String, HttpServletRequest), de.hybris.platform.ycommercewebservices.v2.controller.UsersController.registerUser(UserSignUpWsDTO)
    description: |
      Registers a customer. The following two sets of parameters are available: <ul> <li>First set is used to register a customer. In this case the required parameters are: login, password, firstName, lastName, titleCode.</li> <li>Second set is used to convert a guest to a customer. In this case the required parameters are: guid, password. </li> <ul>

      Security: Permitted only for customer managers, clients or trusted clients.

    body:
      application/x-www-form-urlencoded:
        formParameters:
          firstName:
            required: false
            description: |
              Customer's first name.

          lastName:
            required: false
            description: |
              Customer's last name.

          password:
            required: false
            description: |
              Customer's password.

          guid:
            required: false
            description: |
              Guest order's guid.

          login:
            required: false
            description: |
              Customer's login. Customer login is case insensitive.

          titleCode:
            required: false
            description: |
              Customer's title code. For a list of codes, see /{baseSiteId}/titles resource

      application/json:
        schema: request./users.POST.application/json
    responses:
      201:
  /{userId}:
    uriParameters:
      userId:
        description: |
          User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>

    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.getUser(String)
      description: |
        Returns customer profile.

        Security: Permitted for clients, customers and customer managers

      queryParameters:
        fields:
          required: false
          default: DEFAULT
          description: |
            Response configuration (list of fields, which should be returned in the response)

      responses:
        200:
          body:
            application/json:
              schema: response./users/{userId}.GET.200.application/json
    put:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.putUser(UserWsDTO), de.hybris.platform.ycommercewebservices.v2.controller.UsersController.putUser(String, String, String, HttpServletRequest)
      description: |
        Updates customer profile. Attributes not provided in the request body will be defined again (set to null or default).

        Security: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager is able to impersonate as any other user and change profile on their behalf.

      body:
        application/x-www-form-urlencoded:
          formParameters:
            firstName:
              required: false
              description: |
                Customer's first name.

            lastName:
              required: false
              description: |
                Customer's last name.

            language:
              required: false
              description: |
                Customer's language.

            currency:
              required: false
              description: |
                Customer's currency.

            titleCode:
              required: true
              description: |
                Customer's title code. For a list of codes, see /{baseSiteId}/titles resource

        application/json:
          schema: request./users/{userId}.PUT.application/json
      responses:
        200:
    patch:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.updateUser(HttpServletRequest), de.hybris.platform.ycommercewebservices.v2.controller.UsersController.updateUser(UserWsDTO)
      description: |
        Updates customer profile. Only attributes provided in the request body will be changed.

        Security: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager is able to impersonate as any other user and change profile on their behalf.

      body:
        application/x-www-form-urlencoded:
          formParameters:
            firstName:
              required: false
              description: |
                Customer's first name.

            lastName:
              required: false
              description: |
                Customer's last name.

            language:
              required: false
              description: |
                Customer's language.

            currency:
              required: false
              description: |
                Customer's currency.

            titleCode:
              required: false
              description: |
                Customer's title code. For a list of codes, see /{baseSiteId}/titles resource

        application/json:
          schema: request./users/{userId}.PATCH.application/json
      responses:
        200:
    delete:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.deactivateUser()
      description: |
        Removes customer profile.

        Security: Permitted for trusted clients, customers and customer managers. Trusted client is able to impersonate as any other user and deactivate profile on their behalf.

      responses:
        200:
    /addresses:
      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.getAddresses(String)
        description: |
          Returns customer's addresses.

          Security: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

        queryParameters:
          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in the response)

        responses:
          200:
            body:
              application/json:
                schema: response./users/{userId}/addresses.GET.200.application/json
      post:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.createAddress(HttpServletRequest, String), de.hybris.platform.ycommercewebservices.v2.controller.UsersController.createAddress(AddressWsDTO, String)
        description: |
          Creates a new address.

          Security: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

        queryParameters:
          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in the response)

        body:
          application/x-www-form-urlencoded:
            formParameters:
              region.isocode:
                required: false
                description: |
                  Isocode for region. If this parameter is required depends on country.

              firstName:
                required: false
                description: |
                  Customer's first name. This parameter is required.

              lastName:
                required: false
                description: |
                  Customer's last name. This parameter is required.

              town:
                required: false
                description: |
                  Town name. If this parameter is required depends on country (usually it is required)

              postalCode:
                required: false
                description: |
                  Postal code. If this parameter is required depends on country (usually it is required)

              line2:
                required: false
                description: |
                  Second part of address. If this parameter is required depends on country (usually it is not required)

              titleCode:
                required: false
                description: |
                  Customer's title code. This parameter is required. For a list of codes, see /{baseSiteId}/titles resource

              line1:
                required: false
                description: |
                  First part of address. If this parameter is required depends on country (usually it is required).

              country.isocode:
                required: false
                description: |
                  Country isocode. This parameter is required and have influence on how rest of parameters are validated (e.g. if parameters are required : line1,line2,town,postalCode,region.isocode)

          application/json:
            schema: request./users/{userId}/addresses.POST.application/json
        responses:
          201:
            body:
              application/json:
                schema: response./users/{userId}/addresses.POST.201.application/json
      /verification:
        post:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.verifyAddress(AddressWsDTO, String), de.hybris.platform.ycommercewebservices.v2.controller.UsersController.verifyAddress(HttpServletRequest, String)
          description: |
            Verifies address

            Security: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

          queryParameters:
            fields:
              required: false
              default: DEFAULT
              description: |
                Response configuration (list of fields, which should be returned in the response)

          body:
            application/x-www-form-urlencoded:
              formParameters:
                region.isocode:
                  required: false
                  description: |
                    Isocode for region. If this parameter is required depends on country.

                town:
                  required: false
                  description: |
                    Town name. If this parameter is required depends on country (usually it is required)

                postalCode:
                  required: false
                  description: |
                    Postal code. If this parameter is required depends on country (usually it is required)

                line2:
                  required: false
                  description: |
                    Second part of address. If this parameter is required depends on country (usually it is not required)

                line1:
                  required: false
                  description: |
                    First part of address. If this parameter is required depends on country (usually it is required).

                country.isocode:
                  required: false
                  description: |
                    Country isocode. This parameter is required and have influence on how rest of parameters are validated (e.g. if parameters are required : line1,line2,town,postalCode,region.isocode)

            application/json:
              schema: request./users/{userId}/addresses/verification.POST.application/json
          responses:
            200:
              body:
                application/json:
                  schema: response./users/{userId}/addresses/verification.POST.200.application/json
      /{addressId}:
        uriParameters:
          addressId:
            description: |
              Address identifier

        get:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.getAddress(String, String)
          description: |
            Returns detailed information about address with a given id.

            Security: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

          queryParameters:
            fields:
              required: false
              default: DEFAULT
              description: |
                Response configuration (list of fields, which should be returned in the response)

          responses:
            200:
              body:
                application/json:
                  schema: response./users/{userId}/addresses/{addressId}.GET.200.application/json
        put:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.putAddress(String, HttpServletRequest), de.hybris.platform.ycommercewebservices.v2.controller.UsersController.putAddress(String, AddressWsDTO)
          description: |
            Updates the address. Attributes not provided in the request will be defined again (set to null or default).

            Security: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

          body:
            application/x-www-form-urlencoded:
              formParameters:
                firstName:
                  required: false
                  description: |
                    Customer's first name. This parameter is required.

                lastName:
                  required: false
                  description: |
                    Customer's last name. This parameter is required.

                country:
                  required: false
                  description: |
                    .isocode Country isocode. This parameter is required and have influence on how rest of parameters are validated (e.g. if parameters are required : line1,line2,town,postalCode,region.isocode)

                town:
                  required: false
                  description: |
                    Town name. If this parameter is required depends on country (usually it is required)

                postalCode:
                  required: false
                  description: |
                    Postal code. If this parameter is required depends on country (usually it is required) restparam region .isocode Isocode for region. If this parameter is required depends on country.

                line2:
                  required: false
                  description: |
                    Second part of address. If this parameter is required depends on country (usually it is not required)

                titleCode:
                  required: false
                  description: |
                    Customer's title code. This parameter is required. For a list of codes, see /{baseSiteId}/titles resource

                line1:
                  required: false
                  description: |
                    First part of address. If this parameter is required depends on country (usually it is required).

                defaultAddress:
                  required: false
                  description: |
                    Parameter specifies if address should be default for customer

            application/json:
              schema: request./users/{userId}/addresses/{addressId}.PUT.application/json
          responses:
            200:
        patch:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.patchAddress(String, HttpServletRequest), de.hybris.platform.ycommercewebservices.v2.controller.UsersController.patchAddress(String, AddressWsDTO)
          description: |
            Updates the address. Only attributes provided in the request body will be changed.

            Security: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

          body:
            application/x-www-form-urlencoded:
              formParameters:
                region.isocode:
                  required: false
                  description: |
                    ISO code for region. If this parameter is required depends on country.

                firstName:
                  required: false
                  description: |
                    Customer's first name. This parameter is required.

                lastName:
                  required: false
                  description: |
                    Customer's last name. This parameter is required.

                town:
                  required: false
                  description: |
                    Town name. If this parameter is required depends on country (usually it is required)

                postalCode:
                  required: false
                  description: |
                    Postal code. If this parameter is required depends on country (usually it is required)

                line2:
                  required: false
                  description: |
                    Second part of address. If this parameter is required depends on country (usually it is not required)

                titleCode:
                  required: false
                  description: |
                    Customer's title code. This parameter is required. For a list of codes, see /{baseSiteId}/titles resource

                line1:
                  required: false
                  description: |
                    First part of address. If this parameter is required depends on country (usually it is required).

                country.isocode:
                  required: false
                  description: |
                    Country isocode. This parameter is required and have influence on how rest of parameters are validated (e.g. if parameters are required : line1,line2,town,postalCode,region.isocode)

                defaultAddress:
                  required: false
                  description: |
                    Parameter specifies if address should be default for customer

            application/json:
              schema: request./users/{userId}/addresses/{addressId}.PATCH.application/json
          responses:
            200:
        delete:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.deleteAddress(String)
          description: |
            Removes customer's address.

            Security: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

          responses:
            200:
    /carts:
      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.getCarts(String, boolean, int, int, String)
        description: |
          Lists all customer carts.

          Security: Permitted only for non-anonymous users.

        queryParameters:
          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in response).

        body:
          application/x-www-form-urlencoded:
            formParameters:
              savedCartsOnly:
                required: false
                default: false
                description: |
                  optional parameter. If the parameter is provided and its value is true only saved carts are returned.

              pageSize:
                required: false
                default: 20
                description: |
                  optional {@link PaginationData} parameter in case of savedCartsOnly == true. Default value 20.

              sort:
                required: false
                description: |
                  optional sort criterion in case of savedCartsOnly == true. No default value.

              currentPage:
                required: false
                default: 0
                description: |
                  optional pagination parameter in case of savedCartsOnly == true. Default value 0.

        responses:
          200:
            body:
              application/json:
                schema: response./users/{userId}/carts.GET.200.application/json
      post:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.createCart(String, String, String)
        description: |
          Creates a new cart or restores an anonymous cart as a user's cart (if an old Cart Id is given in the request)

          Security: Cart may be created by everybody. Restoring anonymous carts is permitted only for non anonymous users.

        queryParameters:
          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in response)

        body:
          application/x-www-form-urlencoded:
            formParameters:
              toMergeCartGuid:
                required: false
                description: |
                  User's cart GUID to merge anonymous cart to

              oldCartId:
                required: false
                description: |
                  Anonymous cart GUID

        responses:
          201:
            body:
              application/json:
                schema: response./users/{userId}/carts.POST.201.application/json
      /{cartId}:
        uriParameters:
          cartId:
            description: |
              Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>

        get:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.getCart(String)
          description: |
            Returns the cart with a given identifier.

            Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

          queryParameters:
            fields:
              required: false
              default: DEFAULT
              description: |
                Response configuration (list of fields, which should be returned in response)

          responses:
            200:
              body:
                application/json:
                  schema: response./users/{userId}/carts/{cartId}.GET.200.application/json
        delete:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.deleteCart()
          description: |
            Deletes a cart with a given cart id.

            Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

          responses:
            200:
        /addresses:
          /delivery:
            post:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.createAndSetAddress(HttpServletRequest, String), de.hybris.platform.ycommercewebservices.v2.controller.CartsController.createAndSetAddress(AddressWsDTO, String)
              description: |
                Creates an address and assigns it to the cart as the delivery address.

                Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

              queryParameters:
                fields:
                  required: false
                  default: DEFAULT
                  description: |
                    Response configuration (list of fields, which should be returned in response)

              body:
                application/x-www-form-urlencoded:
                  formParameters:
                    region.isocode:
                      required: false
                      description: |
                        Isocode for region. If this parameter is required depends on country.

                    firstName:
                      required: false
                      description: |
                        Customer's first name. This parameter is required.

                    lastName:
                      required: false
                      description: |
                        Customer's last name. This parameter is required.

                    town:
                      required: false
                      description: |
                        Town name. If this parameter is required depends on country (usually it is required)

                    postalCode:
                      required: false
                      description: |
                        Postal code. If this parameter is required depends on country (usually it is required)

                    line2:
                      required: false
                      description: |
                        Second part of address. If this parameter is required depends on country (usually it is not required)

                    titleCode:
                      required: false
                      description: |
                        Customer's title code. This parameter is required. For a list of codes, see /{baseSiteId}/titles resource

                    line1:
                      required: false
                      description: |
                        First part of address. If this parameter is required depends on country (usually it is required).

                    country.isocode:
                      required: false
                      description: |
                        Country isocode. This parameter is required and have influence on how rest of parameters are validated (e.g. if parameters are required : line1,line2,town,postalCode,region.isocode)

                application/json:
                  schema: request./users/{userId}/carts/{cartId}/addresses/delivery.POST.application/json
              responses:
                201:
                  body:
                    application/json:
                      schema: response./users/{userId}/carts/{cartId}/addresses/delivery.POST.201.application/json
            put:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.setCartDeliveryAddress(String)
              description: |
                Sets a delivery address for the cart. The address country must be placed among the delivery countries of the current base store.

                Security: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

              body:
                application/x-www-form-urlencoded:
                  formParameters:
                    addressId:
                      required: true
                      description: |
                        Address identifier

              responses:
                200:
            delete:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.removeCartDeliveryAddress()
              description: |
                Removes the delivery address from the cart.

                Security: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

              responses:
                200:
        /clonesavedcart:
          post:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.SaveCartController.cloneSaveCart(String, String, String, String)
            description: |
              Explicitly clones a cart

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            body:
              application/x-www-form-urlencoded:
                formParameters:
                  name:
                    required: false
                    description: |
                      the name that should be applied to the cloned cart

                  description:
                    required: false
                    description: |
                      the description that should be applied to the cloned cart

            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/clonesavedcart.POST.200.application/json
        /deliverymode:
          get:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.getCartDeliveryMode(String)
            description: |
              Returns the delivery mode selected for the cart.

              Security: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/deliverymode.GET.200.application/json
          put:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.setCartDeliveryMode(String)
            description: |
              Sets the delivery mode with a given identifier for the cart.

              Security: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            body:
              application/x-www-form-urlencoded:
                formParameters:
                  deliveryModeId:
                    required: true
                    description: |
                      Delivery mode identifier (code)

            responses:
              200:
          delete:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.removeDeliveryMode()
            description: |
              Removes the delivery mode from the cart.

              Security: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            responses:
              200:
        /deliverymodes:
          get:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.getSupportedDeliveryModes(String)
            description: |
              Returns all delivery modes supported for the current base store and cart delivery address. A delivery address must be set for the cart, otherwise an empty list will be returned.

              Security: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/deliverymodes.GET.200.application/json
        /email:
          put:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.guestLogin(String)
            description: |
              Assigns an email to the cart. This step is required to make a guest checkout.

              Security: Permitted only for client or trusted client

            body:
              application/x-www-form-urlencoded:
                formParameters:
                  email:
                    required: false
                    description: |
                      Email of the guest user. It will be used during checkout process

            responses:
              200:
        /entries:
          get:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.getCartEntries(String)
            description: |
              Returns cart entries.

              Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/entries.GET.200.application/json
          post:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.addCartEntry(String, String, long, String, String), de.hybris.platform.ycommercewebservices.v2.controller.CartsController.addCartEntry(String, OrderEntryWsDTO, String)
            description: |
              Adds a product to the cart.

              Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            body:
              application/x-www-form-urlencoded:
                formParameters:
                  code:
                    required: true
                    description: |
                      Code of the product to be added to cart. Product look-up is performed for the current product catalog version.

                  qty:
                    required: false
                    default: 1
                    description: |
                      Quantity of product.

                  pickupStore:
                    required: false
                    description: |
                      Name of the store where product will be picked. Set only if want to pick up from a store.

              application/json:
                schema: request./users/{userId}/carts/{cartId}/entries.POST.application/json
            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/entries.POST.200.application/json
          /{entryNumber}:
            uriParameters:
              entryNumber:
                description: |
                  Entry number. Zero-based numbering.

            get:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.getCartEntry(long, String)
              description: |
                Returns the details of the cart entries.

                Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

              queryParameters:
                fields:
                  required: false
                  default: DEFAULT
                  description: |
                    Response configuration (list of fields, which should be returned in response)

              responses:
                200:
                  body:
                    application/json:
                      schema: response./users/{userId}/carts/{cartId}/entries/{entryNumber}.GET.200.application/json
            put:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.setCartEntry(String, long, Long, String, String), de.hybris.platform.ycommercewebservices.v2.controller.CartsController.setCartEntry(String, long, OrderEntryWsDTO, String)
              description: |
                Updates the quantity of a single cart entry and details of the store where the cart entry will be picked. Attributes not provided in request will be defined again (set to null or default)

                Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

              queryParameters:
                fields:
                  required: false
                  default: DEFAULT
                  description: |
                    Response configuration (list of fields, which should be returned in response)

              body:
                application/x-www-form-urlencoded:
                  formParameters:
                    qty:
                      required: true
                      description: |
                        Quantity of product.

                    pickupStore:
                      required: false
                      description: |
                        Name of the store where product will be picked. Set only if want to pick up from a store.

                application/json:
                  schema: request./users/{userId}/carts/{cartId}/entries/{entryNumber}.PUT.application/json
              responses:
                200:
                  body:
                    application/json:
                      schema: response./users/{userId}/carts/{cartId}/entries/{entryNumber}.PUT.200.application/json
            patch:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.updateCartEntry(String, long, OrderEntryWsDTO, String), de.hybris.platform.ycommercewebservices.v2.controller.CartsController.updateCartEntry(String, long, Long, String, String)
              description: |
                Updates the quantity of a single cart entry and details of the store where the cart entry will be picked.

                Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

              queryParameters:
                fields:
                  required: false
                  default: DEFAULT
                  description: |
                    Response configuration (list of fields, which should be returned in response)

              body:
                application/x-www-form-urlencoded:
                  formParameters:
                    qty:
                      required: false
                      description: |
                        Quantity of product.

                    pickupStore:
                      required: false
                      description: |
                        Name of the store where product will be picked. Set only if want to pick up from a store.

                application/json:
                  schema: request./users/{userId}/carts/{cartId}/entries/{entryNumber}.PATCH.application/json
              responses:
                200:
                  body:
                    application/json:
                      schema: response./users/{userId}/carts/{cartId}/entries/{entryNumber}.PATCH.200.application/json
            delete:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.removeCartEntry(long)
              description: |
                Deletes cart entry.

                Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

              responses:
                200:
        /flagForDeletion:
          patch:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.SaveCartController.flagForDeletion(String, String)
            description: |
              Flags a cart for deletion (the cart doesn't have corresponding save cart attributes anymore). The cart is not actually deleted from the database. But with the removal of the saved cart attributes, this cart will be taken care of by the cart removal job just like any other cart.

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/flagForDeletion.PATCH.200.application/json
        /paymentdetails:
          post:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.addPaymentDetails(PaymentDetailsWsDTO, String), de.hybris.platform.ycommercewebservices.v2.controller.CartsController.addPaymentDetails(HttpServletRequest, String)
            description: |
              Defines details of a new credit card payment details and assigns the payment to the cart.

              Security: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            body:
              application/x-www-form-urlencoded:
                formParameters:
                  billingAddress.country.isocode:
                    required: false
                    description: |
                      Country isocode. This parameter is required and have influence on how rest of address parameters are validated (e.g. if parameters are required : line1,line2,town,postalCode,region.isocode)

                  billingAddress.line1:
                    required: false
                    description: |
                      First part of address. If this parameter is required depends on country (usually it is required).

                  startMonth:
                    required: false
                  saved:
                    required: false
                    description: |
                      Parameter defines if the payment details should be saved for the customer and than could be reused for future orders.

                  billingAddress.line2:
                    required: false
                    description: |
                      Second part of address. If this parameter is required depends on country (usually it is not required)

                  billingAddress.region.isocode:
                    required: false
                    description: |
                      Isocode for region. If this parameter is required depends on country.

                  issueNumber:
                    required: false
                  cardType:
                    required: false
                    description: |
                      Card type. This parameter is required. Call GET /{baseSiteId}/cardtypes beforehand to see what card types are supported

                  expiryMonth:
                    required: false
                    description: |
                      Month of expiry date. This parameter is required.

                  startYear:
                    required: false
                  billingAddress.titleCode:
                    required: false
                    description: |
                      Customer's title code. This parameter is required. For a list of codes, see /{baseSiteId}/titles resource

                  defaultPaymentInfo:
                    required: false
                    description: |
                      Parameter defines if the payment details should be used as default for customer.

                  expiryYear:
                    required: false
                    description: |
                      Year of expiry date. This parameter is required.

                  accountHolderName:
                    required: false
                    description: |
                      Name on card. This parameter is required.

                  billingAddress.postalCode:
                    required: false
                    description: |
                      Postal code. If this parameter is required depends on country (usually it is required)

                  billingAddress.lastName:
                    required: false
                    description: |
                      Customer's last name. This parameter is required.

                  billingAddress.town:
                    required: false
                    description: |
                      Town name. If this parameter is required depends on country (usually it is required)

                  subscriptionId:
                    required: false
                  cardNumber:
                    required: false
                    description: |
                      Card number. This parameter is required.

                  billingAddress.firstName:
                    required: false
                    description: |
                      Customer's first name. This parameter is required.

              application/json:
                schema: request./users/{userId}/carts/{cartId}/paymentdetails.POST.application/json
            responses:
              201:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/paymentdetails.POST.201.application/json
          put:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.setPaymentDetails(String)
            description: |
              Sets credit card payment details for the cart.

              Security: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            body:
              application/x-www-form-urlencoded:
                formParameters:
                  paymentDetailsId:
                    required: true
                    description: |
                      Payment details identifier

            responses:
              200:
        /promotions:
          get:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.getPromotions(String)
            description: |
              Return information about promotions applied on cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.

              Security: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/promotions.GET.200.application/json
          post:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.applyPromotion(String)
            description: |
              Enables the promotion for the order based on the promotionId defined for the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.

              Security: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            body:
              application/x-www-form-urlencoded:
                formParameters:
                  promotionId:
                    required: true
                    description: |
                      Promotion identifier

            responses:
              200:
          /{promotionId}:
            uriParameters:
              promotionId:
                description: |
                  Promotion identifier (code)

            get:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.getPromotion(String, String)
              description: |
                Return information about promotion with given id, applied on cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.

                Security: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

              queryParameters:
                fields:
                  required: false
                  default: DEFAULT
                  description: |
                    Response configuration (list of fields, which should be returned in response)

              responses:
                200:
                  body:
                    application/json:
                      schema: response./users/{userId}/carts/{cartId}/promotions/{promotionId}.GET.200.application/json
            delete:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.removePromotion(String)
              description: |
                Disables the promotion for the order based on the promotionId defined for the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.

                Security: Permitted only for trusted clients

              responses:
                200:
        /restoresavedcart:
          patch:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.SaveCartController.restoreSavedCart(String, String)
            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/restoresavedcart.PATCH.200.application/json
        /save:
          patch:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.SaveCartController.saveCart(String, String, String, String)
            description: |
              Explicitly saves a cart

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            body:
              application/x-www-form-urlencoded:
                formParameters:
                  saveCartName:
                    required: false
                    description: |
                      the name that should be applied to the saved cart

                  saveCartDescription:
                    required: false
                    description: |
                      the description that should be applied to the saved cart

            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/save.PATCH.200.application/json
        /savedcart:
          get:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.SaveCartController.getSavedCart(String, String)
            description: |
              Returns saved cart by it id for authenticated user

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/savedcart.GET.200.application/json
        /vouchers:
          get:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.getVouchers(String)
            description: |
              Returns list of vouchers applied to the cart.

              Security: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            queryParameters:
              fields:
                required: false
                default: DEFAULT
                description: |
                  Response configuration (list of fields, which should be returned in response)

            responses:
              200:
                body:
                  application/json:
                    schema: response./users/{userId}/carts/{cartId}/vouchers.GET.200.application/json
          post:
            #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.applyVoucherForCart(String)
            description: |
              Applies a voucher based on the voucherId defined for the cart.

              Security: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

            body:
              application/x-www-form-urlencoded:
                formParameters:
                  voucherId:
                    required: true
                    description: |
                      Voucher identifier

            responses:
              200:
          /{voucherId}:
            uriParameters:
              voucherId:
                description: |
                  Voucher identifier (code)

            delete:
              #java method: de.hybris.platform.ycommercewebservices.v2.controller.CartsController.releaseVoucherFromCart(String)
              description: |
                Removes a voucher based on the voucherId defined for the current cart.

                Security: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.

              responses:
                200:
    /customergroups:
      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.getAllCustomerGroupsForCustomer(String, String)
        description: |
          Returns all customer groups of a customer.

          Security: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

        queryParameters:
          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in the response)

        responses:
          200:
            body:
              application/json:
                schema: response./users/{userId}/customergroups.GET.200.application/json
    /login:
      put:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.changeLogin(String, String)
        description: |
          Changes customer's login.

          Security: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager is able to impersonate as any other user and change login on their behalf.

        body:
          application/x-www-form-urlencoded:
            formParameters:
              password:
                required: false
                description: |
                  Customer's current password.

              newLogin:
                required: false
                description: |
                  Customer's new login. Customer login is case insensitive.

        responses:
          200:
    /orders:
      head:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.OrdersController.getCountOrdersForUser(String, HttpServletResponse)
        description: |
          Returns X-Total-Count header with a total number of results (orders history for all orders placed by the specific user for the specific base store).

          Security: Allowed only for customers, customer managers, trusted clients. Trusted client is able to impersonate as any customer and access their orders.

        queryParameters:
          statuses:
            required: false
            description: |
              Filters only certain order statuses. It means: statuses=CANCELLED,CHECKED_VALID would only return orders with status CANCELLED or CHECKED_VALID.

        responses:
          200:
      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.OrdersController.getOrdersForUser(String, int, int, String, String, HttpServletResponse)
        description: |
          Returns order history data for all orders placed by the specific user for the specific base store. Response contains orders search result displayed in several pages if needed.

          Security: Allowed only for customers, customer managers, trusted clients Trusted client is able to impersonate as any customer and access their orders.

        queryParameters:
          statuses:
            required: false
            description: |
              Filters only certain order statuses. It means: statuses=CANCELLED,CHECKED_VALID would only return orders with status CANCELLED or CHECKED_VALID.

          pageSize:
            required: false
            default: 20
            description: |
              The number of results returned per page.

          sort:
            required: false
            description: |
              Sorting method applied to the return results.

          currentPage:
            required: false
            default: 0
            description: |
              The current result page requested.

          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in response)

        responses:
          200:
            body:
              application/json:
                schema: response./users/{userId}/orders.GET.200.application/json
      post:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.OrdersController.placeOrder(String, String, String)
        description: |
          Authorizes cart and places the order. Response contains the new order data.

          Security: Allowed only for customers, customer managers, clients or trusted clients. Trusted client is able to impersonate as any customer and place order on his behalf

        queryParameters:
          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in response)

        body:
          application/x-www-form-urlencoded:
            formParameters:
              cartId:
                required: true
                description: |
                  Cart code for logged in user, cart GUID for guest checkout

              securityCode:
                required: false
                description: |
                  CCV security code.

        responses:
          201:
            body:
              application/json:
                schema: response./users/{userId}/orders.POST.201.application/json
      /{code}:
        uriParameters:
          code:
            description: |
              Order GUID (Globally Unique Identifier) or order CODE

        get:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.OrdersController.getOrderForUserByCode(String, String)
          description: |
            Returns specific order details based on a specific order code. The response contains detailed order information.

            Security: Allowed only for customers, customer managers, clients or trusted clients. Trusted client is able to impersonate as any customer and access their orders.

          queryParameters:
            fields:
              required: false
              default: DEFAULT
              description: |
                Response configuration (list of fields, which should be returned in response)

          responses:
            200:
              body:
                application/json:
                  schema: response./users/{userId}/orders/{code}.GET.200.application/json
    /password:
      put:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.changePassword(String, String, String)
        description: |
          Changes customer's password.

          Security: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager may change someone's else password without knowing the old one.

        body:
          application/x-www-form-urlencoded:
            formParameters:
              new:
                required: false
                description: |
                  New password

              old:
                required: false
                description: |
                  Old password. Required only for ROLE_CUSTOMERGROUP

        responses:
          202:
    /paymentdetails:
      get:
        #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.getPaymentInfos(boolean, String)
        description: |
          Return customer's credit card payment details list.

          Security: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

        queryParameters:
          saved:
            required: false
            default: false
            description: |
              Type of payment details

          fields:
            required: false
            default: DEFAULT
            description: |
              Response configuration (list of fields, which should be returned in the response)

        responses:
          200:
            body:
              application/json:
                schema: response./users/{userId}/paymentdetails.GET.200.application/json
      /{paymentDetailsId}:
        uriParameters:
          paymentDetailsId:
            description: |
              - Payment details identifier

        get:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.getPaymentDetails(String, String)
          description: |
            Returns customer's credit card payment details for a given id.

            Security: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

          queryParameters:
            fields:
              required: false
              default: DEFAULT
              description: |
                Response configuration (list of fields, which should be returned in the response)

          responses:
            200:
              body:
                application/json:
                  schema: response./users/{userId}/paymentdetails/{paymentDetailsId}.GET.200.application/json
        put:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.putPaymentInfo(String, HttpServletRequest), de.hybris.platform.ycommercewebservices.v2.controller.UsersController.putPaymentInfo(String, PaymentDetailsWsDTO)
          description: |
            Updates existing customer's credit card payment info based on the payment info ID. Attributes not given in request will be defined again (set to null or default).

            Security: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

          body:
            application/x-www-form-urlencoded:
              formParameters:
                billingAddress.country.isocode:
                  required: false
                  description: |
                    Country isocode. This parameter is required and have influence on how rest of address parameters are validated (e.g. if parameters are required : line1,line2,town,postalCode,region.isocode)

                billingAddress.line1:
                  required: false
                  description: |
                    First part of address. If this parameter is required depends on country (usually it is required).

                startMonth:
                  required: false
                saved:
                  required: false
                  description: |
                    Parameter defines if the payment details should be saved for the customer and than could be reused for future orders.

                billingAddress.line2:
                  required: false
                  description: |
                    Second part of address. If this parameter is required depends on country (usually it is not required)

                billingAddress.region.isocode:
                  required: false
                  description: |
                    Isocode for region. If this parameter is required depends on country.

                issueNumber:
                  required: false
                cardType:
                  required: false
                  description: |
                    Card type. This parameter is required. Call GET /{baseSiteId}/cardtypes beforehand to see what card types are supported

                expiryMonth:
                  required: false
                  description: |
                    Month of expiry date. This parameter is required.

                startYear:
                  required: false
                billingAddress.titleCode:
                  required: false
                  description: |
                    Customer's title code. This parameter is required. For a list of codes, see /{baseSiteId}/titles resource

                defaultPaymentInfo:
                  required: false
                  description: |
                    Parameter defines if the payment details should be used as default for customer.

                expiryYear:
                  required: false
                  description: |
                    Year of expiry date. This parameter is required.

                accountHolderName:
                  required: false
                  description: |
                    Name on card. This parameter is required.

                billingAddress.postalCode:
                  required: false
                  description: |
                    Postal code. If this parameter is required depends on country (usually it is required)

                billingAddress.lastName:
                  required: false
                  description: |
                    Customer's last name. This parameter is required.

                billingAddress.town:
                  required: false
                  description: |
                    Town name. If this parameter is required depends on country (usually it is required)

                subscriptionId:
                  required: false
                cardNumber:
                  required: false
                  description: |
                    Card number. This parameter is required.

                billingAddress.firstName:
                  required: false
                  description: |
                    Customer's first name. This parameter is required.

            application/json:
              schema: request./users/{userId}/paymentdetails/{paymentDetailsId}.PUT.application/json
          responses:
            200:
        patch:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.updatePaymentInfo(String, HttpServletRequest), de.hybris.platform.ycommercewebservices.v2.controller.UsersController.updatePaymentInfo(String, PaymentDetailsWsDTO)
          description: |
            Updates existing customer's credit card payment details based on its ID. Only attributes given in request will be changed.

            Security: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

          body:
            application/x-www-form-urlencoded:
              formParameters:
                billingAddress.country.isocode:
                  required: false
                  description: |
                    Country isocode. This parameter is required and have influence on how rest of address parameters are validated (e.g. if parameters are required : line1,line2,town,postalCode,region.isocode)

                billingAddress.line1:
                  required: false
                  description: |
                    First part of address. If this parameter is required depends on country (usually it is required).

                startMonth:
                  required: false
                saved:
                  required: false
                  description: |
                    Parameter defines if the payment details should be saved for the customer and than could be reused for future orders.

                billingAddress.line2:
                  required: false
                  description: |
                    Second part of address. If this parameter is required depends on country (usually it is not required)

                billingAddress.region.isocode:
                  required: false
                  description: |
                    Isocode for region. If this parameter is required depends on country.

                issueNumber:
                  required: false
                cardType:
                  required: false
                  description: |
                    Card type. This parameter is required. Call GET /{baseSiteId}/cardtypes beforehand to see what card types are supported

                expiryMonth:
                  required: false
                  description: |
                    Month of expiry date. This parameter is required.

                startYear:
                  required: false
                billingAddress.titleCode:
                  required: false
                  description: |
                    Customer's title code. This parameter is required. For a list of codes, see /{baseSiteId}/titles resource

                defaultPaymentInfo:
                  required: false
                  description: |
                    Parameter defines if the payment details should be used as default for customer.

                expiryYear:
                  required: false
                  description: |
                    Year of expiry date. This parameter is required.

                accountHolderName:
                  required: false
                  description: |
                    Name on card. This parameter is required.

                billingAddress.postalCode:
                  required: false
                  description: |
                    Postal code. If this parameter is required depends on country (usually it is required)

                billingAddress.lastName:
                  required: false
                  description: |
                    Customer's last name. This parameter is required.

                billingAddress.town:
                  required: false
                  description: |
                    Town name. If this parameter is required depends on country (usually it is required)

                subscriptionId:
                  required: false
                cardNumber:
                  required: false
                  description: |
                    Card number. This parameter is required.

                billingAddress.firstName:
                  required: false
                  description: |
                    Customer's first name. This parameter is required.

            application/json:
              schema: request./users/{userId}/paymentdetails/{paymentDetailsId}.PATCH.application/json
          responses:
            200:
        delete:
          #java method: de.hybris.platform.ycommercewebservices.v2.controller.UsersController.deletePaymentInfo(String)
          description: |
            Removes customer's credit card payment details based on its ID.

            Security: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.

          responses:
            200:
/vouchers:
  /{code}:
    uriParameters:
      code:
        description: |
          Voucher identifier (code)

    get:
      #java method: de.hybris.platform.ycommercewebservices.v2.controller.VouchersController.getVoucherByCode(String, String)
      description: |
        Returns details of a single voucher according to a voucher code.

        Security: Permitted only for trusted client

      queryParameters:
        fields:
          required: false
          default: BASIC
          description: |
            Response configuration (list of fields, which should be returned in response)

      responses:
        200:
          body:
            application/json:
              schema: response./vouchers/{code}.GET.200.application/json
