/**
 * OCC
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import PromotionListWsDTOModel from '../models/PromotionListWsDTOModel';
import PromotionWsDTOModel from '../models/PromotionWsDTOModel';

/**
* Promotions service.
* @module api/PromotionsApi
* @version v2
*/
export default class PromotionsApi {

    /**
    * Constructs a new PromotionsApi. 
    * @alias module:api/PromotionsApi
    * @class
    * @param {module:ApiClient} apiClient Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Promotions
     * Returns promotions defined for a current base site. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.  Security: Permitted only for trusted client 
     * @param {Object} opts Optional parameters
     * @param {String} opts.promotionGroup Only promotions from this group are returned
     * @param {String} opts.type Defines what type of promotions should be returned. Values supported for that parameter are: &lt;ul&gt; &lt;li&gt;all: All available promotions are returned&lt;/li&gt; &lt;li&gt;product: Only product promotions are returned&lt;/li&gt; &lt;li&gt;order: Only order promotions are returned&lt;/li&gt; &lt;/ul&gt;
     * @param {String} opts.fields Response configuration (list of fields, which should be returned in response)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/PromotionListWsDTOModel} and HTTP response
     */
    promotionsWithHttpInfo(opts) {
      opts = opts || {};
      let postBody = null;


      let pathParams = {
      };
      let queryParams = {
        'promotionGroup': opts['promotionGroup'],
        'type': opts['type'],
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PromotionListWsDTOModel;

      return this.apiClient.callApi(
        '/promotions', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * Promotions
     * Returns promotions defined for a current base site. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.  Security: Permitted only for trusted client 
     * @param {Object} opts Optional parameters
     * @param {String} opts.promotionGroup Only promotions from this group are returned
     * @param {String} opts.type Defines what type of promotions should be returned. Values supported for that parameter are: &lt;ul&gt; &lt;li&gt;all: All available promotions are returned&lt;/li&gt; &lt;li&gt;product: Only product promotions are returned&lt;/li&gt; &lt;li&gt;order: Only order promotions are returned&lt;/li&gt; &lt;/ul&gt;
     * @param {String} opts.fields Response configuration (list of fields, which should be returned in response)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/PromotionListWsDTOModel}
     */
    promotions(opts) {
      return this.promotionsWithHttpInfo(opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * PromotionsByCode
     * Returns details of a single promotion specified by a promotion code. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.  Security: Permitted only for trusted client 
     * @param {String} code Promotion identifier (code)
     * @param {Object} opts Optional parameters
     * @param {String} opts.fields Response configuration (list of fields, which should be returned in response)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:models/PromotionWsDTOModel} and HTTP response
     */
    promotionsByCodeWithHttpInfo(code, opts) {
      opts = opts || {};
      let postBody = null;

      // verify the required parameter 'code' is set
      if (code === undefined || code === null) {
        throw new Error("Missing the required parameter 'code' when calling promotionsByCode");
      }


      let pathParams = {
        'code': code
      };
      let queryParams = {
        'fields': opts['fields']
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['auth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = PromotionWsDTOModel;

      return this.apiClient.callApi(
        '/promotions/{code}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType
      );
    }

    /**
     * PromotionsByCode
     * Returns details of a single promotion specified by a promotion code. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.  Security: Permitted only for trusted client 
     * @param {String} code Promotion identifier (code)
     * @param {Object} opts Optional parameters
     * @param {String} opts.fields Response configuration (list of fields, which should be returned in response)
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:models/PromotionWsDTOModel}
     */
    promotionsByCode(code, opts) {
      return this.promotionsByCodeWithHttpInfo(code, opts)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
