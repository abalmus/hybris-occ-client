{
  "swagger": "2.0",
  "info": {
    "version": "v2",
    "title": "OCC",
    "license": {
      "name": "MIT",
      "url": "http://github.com/gruntjs/grunt/blob/master/LICENSE-MIT"
    }
  },
  "host": "api-example.hybris.com",
  "basePath": "/rest/v2/DefaultParameterValue/",
  "securityDefinitions": {
    "auth": {
      "type": "oauth2",
      "flow": "accessCode",
      "authorizationUrl": "http://api-example.hybris.com/rest/authorizationserver/authorize",
      "tokenUrl": "http://api-example.hybris.com/rest/authorizationserver/token",
      "scopes": {}
    }
  },
  "schemes": [
    "http"
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/cardtypes": {
      "get": {
        "description": "Lists supported payment card types.\n",
        "summary": "Cardtypes",
        "tags": [
          "cardtypes"
        ],
        "operationId": "Cardtypes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CardTypeListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/cardtypes?fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Cardtypes",
            "x-testDescription": "Lists supported payment card types.\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/catalogs/{catalogId}/{catalogVersionId}/categories/{categoryId}": {
      "get": {
        "description": "Returns information about category that exists in a catalog version available for the current base store.\n",
        "summary": "CatalogsCategoriesCategoryIdByCatalogId",
        "tags": [
          "catalogs"
        ],
        "operationId": "CatalogsCategoriesCategoryIdByCatalogId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Catalog identifier"
          },
          {
            "name": "catalogVersionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Catalog version identifier"
          },
          {
            "name": "categoryId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Category identifier"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of results returned per page."
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The current result page requested."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CategoryHierarchyWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/catalogs/{catalogId}/{catalogVersionId}": {
      "get": {
        "description": "Returns information about catalog version that exists for the current base store.\n",
        "summary": "CatalogsByCatalogIdAndCatalogVersionId",
        "tags": [
          "catalogs"
        ],
        "operationId": "CatalogsByCatalogIdAndCatalogVersionId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Catalog identifier"
          },
          {
            "name": "catalogVersionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Catalog version identifier"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogVersionWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/catalogs/{catalogId}": {
      "get": {
        "description": "Returns a information about a catalog based on its ID, along with versions defined for the current base store.\n",
        "summary": "CatalogsByCatalogId",
        "tags": [
          "catalogs"
        ],
        "operationId": "CatalogsByCatalogId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "catalogId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Catalog identifier"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/catalogs": {
      "get": {
        "description": "Returns all catalogs with versions defined for the base store.\n",
        "summary": "Catalogs",
        "tags": [
          "catalogs"
        ],
        "operationId": "Catalogs",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CatalogListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/catalogs?fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Catalogs",
            "x-testDescription": "Returns all catalogs with versions defined for the base store.\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/currencies": {
      "get": {
        "description": "Lists all available currencies (all usable currencies for the current store).If the list of currencies for stores is empty, a list of all currencies available in the system is returned.\n",
        "summary": "Currencies",
        "tags": [
          "currencies"
        ],
        "operationId": "Currencies",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CurrencyListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/currencies?fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Currencies",
            "x-testDescription": "Lists all available currencies (all usable currencies for the current store).If the list of currencies for stores is empty, a list of all currencies available in the system is returned.\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/customergroups/{groupId}/members/{userId}": {
      "delete": {
        "description": "Removes user from a customer group.\n\nSecurity: Permitted only for customer managers\n",
        "summary": "CustomergroupsMembersByGroupIdAndUserId",
        "tags": [
          "customergroups"
        ],
        "operationId": "CustomergroupsMembersByGroupIdAndUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group identifier"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/customergroups/{groupId}/members": {
      "put": {
        "description": "Sets members for a user group. The list of existing members is overwritten with a new one.\n\nSecurity: Permitted only for customer managers\n",
        "summary": "CustomergroupsMembersByGroupId",
        "tags": [
          "customergroups"
        ],
        "operationId": "CustomergroupsMembersByGroupId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group identifier"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MemberListWsDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Assigns user(s) to a customer group.\n\nSecurity: Permitted only for customer managers\n",
        "summary": "CustomergroupsMembersByGroupId",
        "tags": [
          "customergroups"
        ],
        "operationId": "CustomergroupsMembersByGroupId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group identifier"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/MemberListWsDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/customergroups/{groupId}": {
      "get": {
        "description": "Returns a customer group with a specific groupId.\n\nSecurity: Permitted only for customer managers\n",
        "summary": "CustomergroupsByGroupId",
        "tags": [
          "customergroups"
        ],
        "operationId": "CustomergroupsByGroupId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "groupId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Group identifier"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserGroupWsDTO17"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/customergroups": {
      "get": {
        "description": "Returns all customer groups that are direct subgroups of a customergroup.\n\nSecurity: Permitted only for customer managers\n",
        "summary": "Customergroups",
        "tags": [
          "customergroups"
        ],
        "operationId": "Customergroups",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Number of customer group returned in one page"
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Current page number (starts with 0)"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserGroupListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/customergroups?pageSize=20&currentPage=0&fields=BASIC"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Customergroups",
            "x-testDescription": "Returns all customer groups that are direct subgroups of a customergroup.\n\nSecurity: Permitted only for customer managers\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Creates a new customer group that is a direct subgroup of a customergroup.\n\nSecurity: Permitted only for customer managers\n",
        "summary": "Customergroups",
        "tags": [
          "customergroups"
        ],
        "operationId": "Customergroups1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserGroupWsDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/deliverycountries": {
      "get": {
        "description": "Lists all supported delivery countries for the current store. The list is sorted alphabetically.\n",
        "summary": "Deliverycountries",
        "tags": [
          "deliverycountries"
        ],
        "operationId": "Deliverycountries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CountryListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/deliverycountries?fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Deliverycountries",
            "x-testDescription": "Lists all supported delivery countries for the current store. The list is sorted alphabetically.\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/export/products": {
      "get": {
        "description": "Used for product export. Depending on the timestamp parameter, it can return all products or only products modified after the given time.\n\nSecurity: Allowed only for trusted client\n",
        "summary": "ExportProducts",
        "tags": [
          "export"
        ],
        "operationId": "ExportProducts",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "catalog",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Catalog from which get products. Must be provided along with version."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of results returned per page."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The current result page requested."
          },
          {
            "name": "version",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Catalog version. Must be provided along with catalog."
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "When this parameter is set, only products modified after given time will be returned.This parameter should be in RFC-8601 format."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/export/products?pageSize=2147483647&fields=DEFAULT&currentPage=0"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "ExportProducts",
            "x-testDescription": "Used for product export. Depending on the timestamp parameter, it can return all products or only products modified after the given time.\n\nSecurity: Allowed only for trusted client\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/feeds/orders/statusfeed": {
      "get": {
        "description": "Returns the orders the status has changed for. Returns only the elements from the current baseSite, updated after the provided timestamp.\n\nSecurity: Allowed only for trusted client\n",
        "summary": "FeedsOrdersStatusfeed",
        "tags": [
          "feeds"
        ],
        "operationId": "FeedsOrdersStatusfeed",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only items newer than the given parameter are retrieved. This parameter should be in RFC-8601 format."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderStatusUpdateElementListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/feeds/orders/statusfeed?fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "FeedsOrdersStatusfeed",
            "x-testDescription": "Returns the orders the status has changed for. Returns only the elements from the current baseSite, updated after the provided timestamp.\n\nSecurity: Allowed only for trusted client\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/forgottenpasswordtokens": {
      "post": {
        "description": "Generates a token to restore customer's forgotten password.\n\nSecurity: Allowed only for client or trusted client\n",
        "summary": "Forgottenpasswordtokens",
        "tags": [
          "forgottenpasswordtokens"
        ],
        "operationId": "Forgottenpasswordtokens",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Customer's user id. Customer user id is case insensitive."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "POST",
              "uri": "/forgottenpasswordtokens"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Forgottenpasswordtokens",
            "x-testDescription": "Generates a token to restore customer's forgotten password.\n\nSecurity: Allowed only for client or trusted client\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/languages": {
      "get": {
        "description": "Lists all available languages (all languages used for a particular store). If the list of languages for a base store is empty, a list of all languages available in the system will be returned.\n",
        "summary": "Languages",
        "tags": [
          "languages"
        ],
        "operationId": "Languages",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/LanguageListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/languages?fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Languages",
            "x-testDescription": "Lists all available languages (all languages used for a particular store). If the list of languages for a base store is empty, a list of all languages available in the system will be returned.\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/orders/{code}": {
      "get": {
        "description": "Returns details of a specific order based on order GUID (Globally Unique Identifier) or order CODE. The response contains a detailed order information.\n\nSecurity: Allowed only for trusted client\n",
        "summary": "OrdersByCode",
        "tags": [
          "orders"
        ],
        "operationId": "OrdersByCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order GUID (Globally Unique Identifier) or order CODE"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/expressupdate": {
      "get": {
        "description": "Returns products added to the express update feed. Returns only elements updated after the provided timestamp.The queue is cleared using a defined cronjob.\n\nSecurity: Permitted only for trusted client\n",
        "summary": "ProductsExpressupdate",
        "tags": [
          "products"
        ],
        "operationId": "ProductsExpressupdate",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "catalog",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only products from this catalog are returned. Format: <b>catalogId:catalogVersion</b>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          },
          {
            "name": "timestamp",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only items newer than the given parameter are retrieved from the queue. This parameter should be in RFC-8601 format."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductExpressUpdateElementListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/products/expressupdate?fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "ProductsExpressupdate",
            "x-testDescription": "Returns products added to the express update feed. Returns only elements updated after the provided timestamp.The queue is cleared using a defined cronjob.\n\nSecurity: Permitted only for trusted client\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/search": {
      "get": {
        "description": "Returns a list of products and additional data such as: available facets, available sorting and pagination options. It can include spelling suggestions.To make spelling suggestions work you need to: <ul> <li>Make sure enableSpellCheck on the SearchQuery is set to true. By default it should be already set to true. </li> <li>Have indexed properties configured to be used for spellchecking.</li> </ul>\n",
        "summary": "ProductsSearch",
        "tags": [
          "products"
        ],
        "operationId": "ProductsSearch1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Serialized query, free text search, facets.<br> The format of a serialized query: <b>freeTextSearch:sort:facetKey1:facetValue1:facetKey2:facetValue2</b>"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of results returned per page."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sorting method applied to the display search results."
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The current result page requested."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductSearchPageWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/products/search?pageSize=20&currentPage=0&fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "ProductsSearch1",
            "x-testDescription": "Returns a list of products and additional data such as: available facets, available sorting and pagination options. It can include spelling suggestions.To make spelling suggestions work you need to: <ul> <li>Make sure enableSpellCheck on the SearchQuery is set to true. By default it should be already set to true. </li> <li>Have indexed properties configured to be used for spellchecking.</li> </ul>\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/suggestions": {
      "get": {
        "description": "Returns a list of all available suggestions related to a given term and limits the results to a specific value of the max parameter.\n",
        "summary": "ProductsSuggestions",
        "tags": [
          "products"
        ],
        "operationId": "ProductsSuggestions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "max",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specifies the limit of results."
          },
          {
            "name": "term",
            "in": "query",
            "required": true,
            "type": "string",
            "description": "Specified term"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SuggestionListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/{productCode}/references": {
      "get": {
        "description": "Returns references for a product with a given product code. Reference type specifies which references to return.\n\nSecurity: Permitted only for trusted client\n",
        "summary": "ProductsReferencesByProductCode",
        "tags": [
          "products"
        ],
        "operationId": "ProductsReferencesByProductCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product identifier"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Maximum size of returned results."
          },
          {
            "name": "referenceType",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Reference type according to enum ProductReferenceTypeEnum"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductReferenceListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/{productCode}/reviews": {
      "get": {
        "description": "Returns the reviews for a product with a given product code.\n",
        "summary": "ProductsReviewsByProductCode",
        "tags": [
          "products"
        ],
        "operationId": "ProductsReviewsByProductCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product identifier"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReviewListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Creates a new customer review as an anonymous user.\n",
        "summary": "ProductsReviewsByProductCode",
        "tags": [
          "products"
        ],
        "operationId": "ProductsReviewsByProductCode1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product identifier"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReviewWsDTO208"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ReviewWsDTO208"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/{productCode}/stock/{storeName}": {
      "get": {
        "description": "Returns product's stock level for a particular store (POS).\n",
        "summary": "ProductsStockByProductCodeAndStoreName",
        "tags": [
          "products"
        ],
        "operationId": "ProductsStockByProductCodeAndStoreName",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product identifier"
          },
          {
            "name": "storeName",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Store identifier"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StockWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/{productCode}/stock": {
      "get": {
        "description": "Returns product's stock levels sorted by distance from specific location passed by free-text parameter or longitude and latitude parameters. The following two sets of parameters are available: <ul> <li>location (required), currentPage (optional), pageSize (optional) or</li>> <li>longitude (required), latitude (required), currentPage (optional), pageSize(optional).</li> </ul>\n",
        "summary": "ProductsStockByProductCode",
        "tags": [
          "products"
        ],
        "operationId": "ProductsStockByProductCode1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product identifier"
          },
          {
            "name": "latitude",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Longitude location parameter."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of results returned per page."
          },
          {
            "name": "location",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Free-text location"
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The current result page requested."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          },
          {
            "name": "longitude",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Latitude location parameter."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StoreFinderStockSearchPageWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/products/{productCode}": {
      "get": {
        "description": "Returns details of a single product according to a product code.\n",
        "summary": "ProductsByProductCode",
        "tags": [
          "products"
        ],
        "operationId": "ProductsByProductCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "productCode",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Product identifier"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/ProductWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/promotions/{code}": {
      "get": {
        "description": "Returns details of a single promotion specified by a promotion code. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.\n\nSecurity: Permitted only for trusted client\n",
        "summary": "PromotionsByCode",
        "tags": [
          "promotions"
        ],
        "operationId": "PromotionsByCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Promotion identifier (code)"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/promotions": {
      "get": {
        "description": "Returns promotions defined for a current base site. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.\n\nSecurity: Permitted only for trusted client\n",
        "summary": "Promotions",
        "tags": [
          "promotions"
        ],
        "operationId": "Promotions",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "promotionGroup",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Only promotions from this group are returned"
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Defines what type of promotions should be returned. Values supported for that parameter are: <ul> <li>all: All available promotions are returned</li> <li>product: Only product promotions are returned</li> <li>order: Only order promotions are returned</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/promotions?fields=BASIC"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Promotions",
            "x-testDescription": "Returns promotions defined for a current base site. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.\n\nSecurity: Permitted only for trusted client\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/stores/{storeId}": {
      "get": {
        "description": "Returns store location based on its unique name.\n",
        "summary": "StoresByStoreId",
        "tags": [
          "stores"
        ],
        "operationId": "StoresByStoreId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "storeId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Store identifier (currently store name)"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PointOfServiceWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/stores": {
      "get": {
        "description": "Lists all store locations that are near the location specified in a query or based on latitude and longitude.\n",
        "summary": "Stores",
        "tags": [
          "stores"
        ],
        "operationId": "Stores1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Location in natural language i.e. city or country."
          },
          {
            "name": "latitude",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Coordinate that specifies the north-south position of a point on the Earth's surface."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of results returned per page."
          },
          {
            "name": "accuracy",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Accuracy in meters."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sorting method applied to the return results."
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The current result page requested."
          },
          {
            "name": "radius",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Radius in meters. Max value: 40075000.0 (Earth's perimeter)."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          },
          {
            "name": "longitude",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Coordinate that specifies the east-west position of a point on the Earth's surface."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/StoreFinderSearchPageWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/stores?pageSize=20&accuracy=0.0&sort=asc&currentPage=0&radius=100000.0&fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Stores1",
            "x-testDescription": "Lists all store locations that are near the location specified in a query or based on latitude and longitude.\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/titles": {
      "get": {
        "description": "Lists all localized titles.\n",
        "summary": "Titles",
        "tags": [
          "titles"
        ],
        "operationId": "Titles",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/TitleListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [
          {
            "request": {
              "method": "GET",
              "uri": "/titles?fields=DEFAULT"
            },
            "expectedResponse": {
              "x-allowExtraHeaders": true,
              "x-bodyMatchMode": "NONE",
              "x-arrayOrderedMatching": false,
              "x-arrayCheckCount": false,
              "x-matchResponseSchema": true,
              "headers": {}
            },
            "x-testShouldPass": true,
            "x-testEnabled": true,
            "x-testName": "Titles",
            "x-testDescription": "Lists all localized titles.\n"
          }
        ],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/addresses/verification": {
      "post": {
        "description": "Verifies address\n\nSecurity: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersAddressesVerificationByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersAddressesVerificationByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressWsDTO296"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in the response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressWsDTO296"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/addresses/{addressId}": {
      "get": {
        "description": "Returns detailed information about address with a given id.\n\nSecurity: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersAddressesByUserIdAndAddressId",
        "tags": [
          "users"
        ],
        "operationId": "UsersAddressesByUserIdAndAddressId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Address identifier"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in the response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Updates the address. Attributes not provided in the request will be defined again (set to null or default).\n\nSecurity: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersAddressesByUserIdAndAddressId",
        "tags": [
          "users"
        ],
        "operationId": "UsersAddressesByUserIdAndAddressId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Address identifier"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressWsDTO296"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Removes customer's address.\n\nSecurity: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersAddressesByUserIdAndAddressId",
        "tags": [
          "users"
        ],
        "operationId": "UsersAddressesByUserIdAndAddressId3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Address identifier"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Updates the address. Only attributes provided in the request body will be changed.\n\nSecurity: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersAddressesByUserIdAndAddressId",
        "tags": [
          "users"
        ],
        "operationId": "UsersAddressesByUserIdAndAddressId2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "addressId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Address identifier"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressWsDTO296"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/addresses": {
      "get": {
        "description": "Returns customer's addresses.\n\nSecurity: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersAddressesByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersAddressesByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in the response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Creates a new address.\n\nSecurity: Permitted for customers, guests, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersAddressesByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersAddressesByUserId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressWsDTO296"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in the response)"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressWsDTO296"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/addresses/delivery": {
      "put": {
        "description": "Sets a delivery address for the cart. The address country must be placed among the delivery countries of the current base store.\n\nSecurity: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsAddressesDeliveryByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsAddressesDeliveryByUserId1",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "addressId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Address identifier"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Creates an address and assigns it to the cart as the delivery address.\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsAddressesDeliveryByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsAddressesDeliveryByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressWsDTO296"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/AddressWsDTO296"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Removes the delivery address from the cart.\n\nSecurity: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsAddressesDeliveryByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsAddressesDeliveryByUserId2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/clonesavedcart": {
      "post": {
        "description": "Explicitly clones a cart\n",
        "summary": "UsersCartsClonesavedcartByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsClonesavedcartByUserId",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          },
          {
            "name": "name",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "the name that should be applied to the cloned cart"
          },
          {
            "name": "description",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "the description that should be applied to the cloned cart"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveCartResultWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/deliverymode": {
      "get": {
        "description": "Returns the delivery mode selected for the cart.\n\nSecurity: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsDeliverymodeByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsDeliverymodeByUserIdAndCartId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeliveryModeWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Sets the delivery mode with a given identifier for the cart.\n\nSecurity: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsDeliverymodeByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsDeliverymodeByUserIdAndCartId1",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "deliveryModeId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Delivery mode identifier (code)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Removes the delivery mode from the cart.\n\nSecurity: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsDeliverymodeByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsDeliverymodeByUserIdAndCartId2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/deliverymodes": {
      "get": {
        "description": "Returns all delivery modes supported for the current base store and cart delivery address. A delivery address must be set for the cart, otherwise an empty list will be returned.\n\nSecurity: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsDeliverymodesByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsDeliverymodesByUserIdAndCartId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/DeliveryModeListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/email": {
      "put": {
        "description": "Assigns an email to the cart. This step is required to make a guest checkout.\n\nSecurity: Permitted only for client or trusted client\n",
        "summary": "UsersCartsEmailByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsEmailByUserIdAndCartId",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "email",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Email of the guest user. It will be used during checkout process"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/entries/{entryNumber}": {
      "get": {
        "description": "Returns the details of the cart entries.\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsEntriesEntryNumberByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsEntriesEntryNumberByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "entryNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Entry number. Zero-based numbering."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderEntryWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Updates the quantity of a single cart entry and details of the store where the cart entry will be picked. Attributes not provided in request will be defined again (set to null or default)\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsEntriesEntryNumberByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsEntriesEntryNumberByUserId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "entryNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Entry number. Zero-based numbering."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderEntryWsDTO542"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderEntryWsDTO542"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Deletes cart entry.\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsEntriesEntryNumberByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsEntriesEntryNumberByUserId3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "entryNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Entry number. Zero-based numbering."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Updates the quantity of a single cart entry and details of the store where the cart entry will be picked.\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsEntriesEntryNumberByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsEntriesEntryNumberByUserId2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "entryNumber",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Entry number. Zero-based numbering."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderEntryWsDTO542"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderEntryWsDTO542"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/entries": {
      "get": {
        "description": "Returns cart entries.\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsEntriesByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsEntriesByUserIdAndCartId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderEntryListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Adds a product to the cart.\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsEntriesByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsEntriesByUserIdAndCartId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderEntryWsDTO542"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderEntryWsDTO542"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/flagForDeletion": {
      "patch": {
        "description": "Flags a cart for deletion (the cart doesn't have corresponding save cart attributes anymore). The cart is not actually deleted from the database. But with the removal of the saved cart attributes, this cart will be taken care of by the cart removal job just like any other cart.\n",
        "summary": "UsersCartsFlagForDeletionByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsFlagForDeletionByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveCartResultWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/paymentdetails": {
      "put": {
        "description": "Sets credit card payment details for the cart.\n\nSecurity: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsPaymentdetailsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsPaymentdetailsByUserId1",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "paymentDetailsId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Payment details identifier"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Defines details of a new credit card payment details and assigns the payment to the cart.\n\nSecurity: Permitted only for customers, guests, customer managers or trusted clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsPaymentdetailsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsPaymentdetailsByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsWsDTO640"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsWsDTO640"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/promotions/{promotionId}": {
      "get": {
        "description": "Return information about promotion with given id, applied on cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.\n\nSecurity: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsPromotionsPromotionIdByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsPromotionsPromotionIdByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "promotionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Promotion identifier (code)"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionResultListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Disables the promotion for the order based on the promotionId defined for the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.\n\nSecurity: Permitted only for trusted clients\n",
        "summary": "UsersCartsPromotionsPromotionIdByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsPromotionsPromotionIdByUserId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "promotionId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Promotion identifier (code)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/promotions": {
      "get": {
        "description": "Return information about promotions applied on cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.\n\nSecurity: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsPromotionsByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsPromotionsByUserIdAndCartId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PromotionResultListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Enables the promotion for the order based on the promotionId defined for the cart. Requests pertaining to promotions have been developed for the previous version of promotions and vouchers and therefore some of them are currently not compatible with the new promotion engine.\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsPromotionsByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsPromotionsByUserIdAndCartId1",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "promotionId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Promotion identifier"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/restoresavedcart": {
      "patch": {
        "summary": "UsersCartsRestoresavedcartByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsRestoresavedcartByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveCartResultWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/save": {
      "patch": {
        "description": "Explicitly saves a cart\n",
        "summary": "UsersCartsSaveByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsSaveByUserIdAndCartId",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          },
          {
            "name": "saveCartName",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "the name that should be applied to the saved cart"
          },
          {
            "name": "saveCartDescription",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "the description that should be applied to the saved cart"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveCartResultWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/savedcart": {
      "get": {
        "description": "Returns saved cart by it id for authenticated user\n",
        "summary": "UsersCartsSavedcartByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsSavedcartByUserIdAndCartId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/SaveCartResultWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/vouchers/{voucherId}": {
      "delete": {
        "description": "Removes a voucher based on the voucherId defined for the current cart.\n\nSecurity: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsVouchersVoucherIdByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsVouchersVoucherIdByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "voucherId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Voucher identifier (code)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}/vouchers": {
      "get": {
        "description": "Returns list of vouchers applied to the cart.\n\nSecurity: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsVouchersByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsVouchersByUserIdAndCartId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VoucherListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Applies a voucher based on the voucherId defined for the cart.\n\nSecurity: Permitted only for non anonymous users or clients. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsVouchersByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsVouchersByUserIdAndCartId1",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "voucherId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Voucher identifier"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts/{cartId}": {
      "get": {
        "description": "Returns the cart with a given identifier.\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsByUserIdAndCartId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Deletes a cart with a given cart id.\n\nSecurity: Anonymous user may access cart by its guid. Customer may access only own cart by its id. Trusted client or customer manager may impersonate as any user and access cart on their behalf.\n",
        "summary": "UsersCartsByUserIdAndCartId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsByUserIdAndCartId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Cart identifier <ul> <li>cart code for logged in user</li> <li>cart guid for anonymous user</li> <li>'current' for the last modified cart</li> </ul>"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/carts": {
      "get": {
        "description": "Lists all customer carts.\n\nSecurity: Permitted only for non-anonymous users.\n",
        "summary": "UsersCartsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)."
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Creates a new cart or restores an anonymous cart as a user's cart (if an old Cart Id is given in the request)\n\nSecurity: Cart may be created by everybody. Restoring anonymous carts is permitted only for non anonymous users.\n",
        "summary": "UsersCartsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCartsByUserId1",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          },
          {
            "name": "toMergeCartGuid",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "User's cart GUID to merge anonymous cart to"
          },
          {
            "name": "oldCartId",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Anonymous cart GUID"
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/CartWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/customergroups": {
      "get": {
        "description": "Returns all customer groups of a customer.\n\nSecurity: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersCustomergroupsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersCustomergroupsByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in the response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserGroupListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/login": {
      "put": {
        "description": "Changes customer's login.\n\nSecurity: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager is able to impersonate as any other user and change login on their behalf.\n",
        "summary": "UsersLoginByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersLoginByUserId",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "password",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Customer's current password."
          },
          {
            "name": "newLogin",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Customer's new login. Customer login is case insensitive."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/orders/{code}": {
      "get": {
        "description": "Returns specific order details based on a specific order code. The response contains detailed order information.\n\nSecurity: Allowed only for customers, customer managers, clients or trusted clients. Trusted client is able to impersonate as any customer and access their orders.\n",
        "summary": "UsersOrdersByUserIdAndCode",
        "tags": [
          "users"
        ],
        "operationId": "UsersOrdersByUserIdAndCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Order GUID (Globally Unique Identifier) or order CODE"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/orders": {
      "get": {
        "description": "Returns order history data for all orders placed by the specific user for the specific base store. Response contains orders search result displayed in several pages if needed.\n\nSecurity: Allowed only for customers, customer managers, trusted clients Trusted client is able to impersonate as any customer and access their orders.\n",
        "summary": "UsersOrdersByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersOrdersByUserId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "statuses",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Filters only certain order statuses. It means: statuses=CANCELLED,CHECKED_VALID would only return orders with status CANCELLED or CHECKED_VALID."
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The number of results returned per page."
          },
          {
            "name": "sort",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Sorting method applied to the return results."
          },
          {
            "name": "currentPage",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "The current result page requested."
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderHistoryListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "post": {
        "description": "Authorizes cart and places the order. Response contains the new order data.\n\nSecurity: Allowed only for customers, customer managers, clients or trusted clients. Trusted client is able to impersonate as any customer and place order on his behalf\n",
        "summary": "UsersOrdersByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersOrdersByUserId2",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "cartId",
            "in": "formData",
            "required": true,
            "type": "string",
            "description": "Cart code for logged in user, cart GUID for guest checkout"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          },
          {
            "name": "securityCode",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "CCV security code."
          }
        ],
        "responses": {
          "201": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/OrderWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/password": {
      "put": {
        "description": "Changes customer's password.\n\nSecurity: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager may change someone's else password without knowing the old one.\n",
        "summary": "UsersPasswordByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersPasswordByUserId",
        "produces": [
          "application/json"
        ],
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "new",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "New password"
          },
          {
            "name": "old",
            "in": "formData",
            "required": false,
            "type": "string",
            "description": "Old password. Required only for ROLE_CUSTOMERGROUP"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/paymentdetails/{paymentDetailsId}": {
      "get": {
        "description": "Returns customer's credit card payment details for a given id.\n\nSecurity: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersPaymentdetailsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersPaymentdetailsByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "paymentDetailsId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "- Payment details identifier"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in the response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Updates existing customer's credit card payment info based on the payment info ID. Attributes not given in request will be defined again (set to null or default).\n\nSecurity: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersPaymentdetailsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersPaymentdetailsByUserId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "paymentDetailsId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "- Payment details identifier"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsWsDTO640"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Removes customer's credit card payment details based on its ID.\n\nSecurity: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersPaymentdetailsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersPaymentdetailsByUserId3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "paymentDetailsId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "- Payment details identifier"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Updates existing customer's credit card payment details based on its ID. Only attributes given in request will be changed.\n\nSecurity: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersPaymentdetailsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersPaymentdetailsByUserId2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "paymentDetailsId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "- Payment details identifier"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsWsDTO640"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}/paymentdetails": {
      "get": {
        "description": "Return customer's credit card payment details list.\n\nSecurity: Permitted for customers, customer managers or trusted client. Trusted client or customer manager is able to impersonate as any other user and access data on their behalf.\n",
        "summary": "UsersPaymentdetailsByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersPaymentdetailsByUserId4",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "saved",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Type of payment details"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in the response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/PaymentDetailsListWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users/{userId}": {
      "get": {
        "description": "Returns customer profile.\n\nSecurity: Permitted for clients, customers and customer managers\n",
        "summary": "UsersByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersByUserId",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in the response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "put": {
        "description": "Updates customer profile. Attributes not provided in the request body will be defined again (set to null or default).\n\nSecurity: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager is able to impersonate as any other user and change profile on their behalf.\n",
        "summary": "UsersByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersByUserId1",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWsDTO286"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "delete": {
        "description": "Removes customer profile.\n\nSecurity: Permitted for trusted clients, customers and customer managers. Trusted client is able to impersonate as any other user and deactivate profile on their behalf.\n",
        "summary": "UsersByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersByUserId3",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      },
      "patch": {
        "description": "Updates customer profile. Only attributes provided in the request body will be changed.\n\nSecurity: Permitted for trusted clients, customers and customer managers. Trusted client or customer manager is able to impersonate as any other user and change profile on their behalf.\n",
        "summary": "UsersByUserId",
        "tags": [
          "users"
        ],
        "operationId": "UsersByUserId2",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "User identifier or one of the literals below : <ul> <li>'current' for currently authenticated user</li> <li>'anonymous' for anonymous user</li> </ul>"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserWsDTO286"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/users": {
      "post": {
        "description": "Registers a customer. The following two sets of parameters are available: <ul> <li>First set is used to register a customer. In this case the required parameters are: login, password, firstName, lastName, titleCode.</li> <li>Second set is used to convert a guest to a customer. In this case the required parameters are: guid, password. </li> <ul>\n\nSecurity: Permitted only for customer managers, clients or trusted clients.\n",
        "summary": "Users",
        "tags": [
          "users"
        ],
        "operationId": "Users",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "",
            "schema": {
              "$ref": "#/definitions/UserSignUpWsDTO"
            }
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    },
    "/vouchers/{code}": {
      "get": {
        "description": "Returns details of a single voucher according to a voucher code.\n\nSecurity: Permitted only for trusted client\n",
        "summary": "VouchersByCode",
        "tags": [
          "vouchers"
        ],
        "operationId": "VouchersByCode",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "required": true,
            "type": "string",
            "description": "Voucher identifier (code)"
          },
          {
            "name": "fields",
            "in": "query",
            "required": false,
            "type": "string",
            "description": "Response configuration (list of fields, which should be returned in response)"
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "schema": {
              "$ref": "#/definitions/VoucherWsDTO"
            },
            "examples": {}
          }
        },
        "security": [
          {
            "auth": []
          }
        ],
        "x-unitTests": [],
        "x-operation-settings": {
          "CollectParameters": false,
          "AllowDynamicQueryParameters": false,
          "AllowDynamicFormParameters": false,
          "IsMultiContentStreaming": false
        }
      }
    }
  },
  "definitions": {
    "CardTypeListWsDTO": {
      "title": "CardTypeListWsDTO",
      "type": "object",
      "properties": {
        "cardTypes": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CardTypeWsDTO"
          }
        }
      }
    },
    "CardTypeWsDTO": {
      "title": "CardTypeWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "CatalogListWsDTO": {
      "title": "CatalogListWsDTO",
      "type": "object",
      "properties": {
        "catalogs": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogWsDTO"
          }
        }
      }
    },
    "CatalogWsDTO": {
      "title": "CatalogWsDTO",
      "type": "object",
      "properties": {
        "catalogVersions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CatalogVersionWsDTO"
          }
        },
        "id": {
          "description": "",
          "type": "string"
        },
        "lastModified": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        }
      }
    },
    "CatalogVersionWsDTO": {
      "title": "CatalogVersionWsDTO",
      "type": "object",
      "properties": {
        "categories": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryHierarchyWsDTO"
          }
        },
        "id": {
          "description": "",
          "type": "string"
        },
        "lastModified": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        }
      }
    },
    "CategoryHierarchyWsDTO": {
      "title": "CategoryHierarchyWsDTO",
      "type": "object"
    },
    "CurrencyListWsDTO": {
      "title": "CurrencyListWsDTO",
      "type": "object",
      "properties": {
        "currencies": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CurrencyWsDTO"
          }
        }
      }
    },
    "CurrencyWsDTO": {
      "title": "CurrencyWsDTO",
      "type": "object",
      "properties": {
        "isocode": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "active": {
          "description": "",
          "type": "boolean"
        },
        "symbol": {
          "description": "",
          "type": "string"
        }
      }
    },
    "UserGroupWsDTO": {
      "title": "UserGroupWsDTO",
      "type": "object",
      "properties": {
        "members": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Member"
          }
        },
        "uid": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Member": {
      "title": "Member",
      "type": "object",
      "properties": {
        "uid": {
          "description": "",
          "type": "string"
        }
      }
    },
    "UserGroupListWsDTO": {
      "title": "UserGroupListWsDTO",
      "type": "object",
      "properties": {
        "userGroups": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/UserGroupWsDTO17"
          }
        },
        "totalNumber": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "pageSize": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "numberOfPages": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "currentPage": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "UserGroupWsDTO17": {
      "title": "UserGroupWsDTO17",
      "type": "object",
      "properties": {
        "members": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrincipalWsDTO"
          }
        }
      }
    },
    "PrincipalWsDTO": {
      "title": "PrincipalWsDTO",
      "type": "object",
      "properties": {
        "uid": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "MemberListWsDTO": {
      "title": "MemberListWsDTO",
      "type": "object",
      "properties": {
        "members": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/Member"
          }
        }
      }
    },
    "CountryListWsDTO": {
      "title": "CountryListWsDTO",
      "type": "object",
      "properties": {
        "countries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CountryWsDTO"
          }
        }
      }
    },
    "CountryWsDTO": {
      "title": "CountryWsDTO",
      "type": "object",
      "properties": {
        "isocode": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "ProductListWsDTO": {
      "title": "ProductListWsDTO",
      "type": "object",
      "properties": {
        "products": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductWsDTO"
          }
        },
        "catalog": {
          "description": "",
          "type": "string"
        },
        "version": {
          "description": "",
          "type": "string"
        },
        "totalProductCount": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "totalPageCount": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "currentPage": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ProductWsDTO": {
      "title": "ProductWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "purchasable": {
          "description": "",
          "type": "boolean"
        },
        "stock": {
          "$ref": "#/definitions/StockWsDTO"
        },
        "futureStocks": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FutureStockWsDTO"
          }
        },
        "availableForPickup": {
          "description": "",
          "type": "boolean"
        },
        "averageRating": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "numberOfReviews": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "summary": {
          "description": "",
          "type": "string"
        },
        "manufacturer": {
          "description": "",
          "type": "string"
        },
        "variantType": {
          "description": "",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "baseProduct": {
          "description": "",
          "type": "string"
        },
        "images": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageWsDTO"
          }
        },
        "categories": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryWsDTO"
          }
        },
        "reviews": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReviewWsDTO"
          }
        },
        "classifications": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassificationWsDTO"
          }
        },
        "potentialPromotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionWsDTO"
          }
        },
        "variantOptions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantOptionWsDTO"
          }
        },
        "baseOptions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseOptionWsDTO"
          }
        },
        "volumePricesFlag": {
          "description": "",
          "type": "boolean"
        },
        "volumePrices": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceWsDTO"
          }
        }
      }
    },
    "StockWsDTO": {
      "title": "StockWsDTO",
      "type": "object",
      "properties": {
        "stockLevelStatus": {
          "description": "",
          "type": "string"
        },
        "stockLevel": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "FutureStockWsDTO": {
      "title": "FutureStockWsDTO",
      "type": "object",
      "properties": {
        "stock": {
          "$ref": "#/definitions/StockWsDTO"
        },
        "date": {
          "description": "",
          "type": "string"
        },
        "formattedDate": {
          "description": "",
          "type": "string"
        }
      }
    },
    "PriceWsDTO": {
      "title": "PriceWsDTO",
      "type": "object",
      "properties": {
        "currencyIso": {
          "description": "",
          "type": "string"
        },
        "value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "priceType": {
          "description": "",
          "type": "string"
        },
        "formattedValue": {
          "description": "",
          "type": "string"
        },
        "minQuantity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "maxQuantity": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ImageWsDTO": {
      "title": "ImageWsDTO",
      "type": "object",
      "properties": {
        "imageType": {
          "description": "",
          "type": "string"
        },
        "format": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "altText": {
          "description": "",
          "type": "string"
        },
        "galleryIndex": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "CategoryWsDTO": {
      "title": "CategoryWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/ImageWsDTO"
        }
      }
    },
    "ReviewWsDTO": {
      "title": "ReviewWsDTO",
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "headline": {
          "description": "",
          "type": "string"
        },
        "comment": {
          "description": "",
          "type": "string"
        },
        "rating": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "date": {
          "description": "",
          "type": "string"
        },
        "alias": {
          "description": "",
          "type": "string"
        },
        "principal": {
          "$ref": "#/definitions/UserWsDTO"
        }
      }
    },
    "UserWsDTO": {
      "title": "UserWsDTO",
      "type": "object",
      "properties": {
        "defaultAddress": {
          "$ref": "#/definitions/AddressWsDTO"
        },
        "titleCode": {
          "description": "",
          "type": "string"
        },
        "title": {
          "description": "",
          "type": "string"
        },
        "firstName": {
          "description": "",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyWsDTO"
        },
        "language": {
          "$ref": "#/definitions/LanguageWsDTO"
        },
        "displayUid": {
          "description": "",
          "type": "string"
        },
        "uid": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "AddressWsDTO": {
      "title": "AddressWsDTO",
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "title": {
          "description": "",
          "type": "string"
        },
        "titleCode": {
          "description": "",
          "type": "string"
        },
        "firstName": {
          "description": "",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "type": "string"
        },
        "companyName": {
          "description": "",
          "type": "string"
        },
        "line1": {
          "description": "",
          "type": "string"
        },
        "line2": {
          "description": "",
          "type": "string"
        },
        "town": {
          "description": "",
          "type": "string"
        },
        "region": {
          "$ref": "#/definitions/RegionWsDTO"
        },
        "postalCode": {
          "description": "",
          "type": "string"
        },
        "phone": {
          "description": "",
          "type": "string"
        },
        "email": {
          "description": "",
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/CountryWsDTO"
        },
        "shippingAddress": {
          "description": "",
          "type": "boolean"
        },
        "visibleInAddressBook": {
          "description": "",
          "type": "boolean"
        },
        "formattedAddress": {
          "description": "",
          "type": "string"
        }
      }
    },
    "RegionWsDTO": {
      "title": "RegionWsDTO",
      "type": "object",
      "properties": {
        "isocode": {
          "description": "",
          "type": "string"
        },
        "isocodeShort": {
          "description": "",
          "type": "string"
        },
        "countryIso": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "LanguageWsDTO": {
      "title": "LanguageWsDTO",
      "type": "object",
      "properties": {
        "isocode": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "nativeName": {
          "description": "",
          "type": "string"
        },
        "active": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "ClassificationWsDTO": {
      "title": "ClassificationWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "features": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureWsDTO"
          }
        }
      }
    },
    "FeatureWsDTO": {
      "title": "FeatureWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "type": {
          "description": "",
          "type": "string"
        },
        "range": {
          "description": "",
          "type": "boolean"
        },
        "comparable": {
          "description": "",
          "type": "boolean"
        },
        "featureUnit": {
          "$ref": "#/definitions/FeatureUnitWsDTO"
        },
        "featureValues": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FeatureValueWsDTO"
          }
        }
      }
    },
    "FeatureUnitWsDTO": {
      "title": "FeatureUnitWsDTO",
      "type": "object",
      "properties": {
        "symbol": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "unitType": {
          "description": "",
          "type": "string"
        }
      }
    },
    "FeatureValueWsDTO": {
      "title": "FeatureValueWsDTO",
      "type": "object",
      "properties": {
        "value": {
          "description": "",
          "type": "string"
        }
      }
    },
    "PromotionWsDTO": {
      "title": "PromotionWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "title": {
          "description": "",
          "type": "string"
        },
        "promotionType": {
          "description": "",
          "type": "string"
        },
        "startDate": {
          "description": "",
          "type": "string"
        },
        "endDate": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "couldFireMessages": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "firedMessages": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "productBanner": {
          "$ref": "#/definitions/ImageWsDTO"
        },
        "enabled": {
          "description": "",
          "type": "boolean"
        },
        "priority": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "promotionGroup": {
          "description": "",
          "type": "string"
        },
        "restrictions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionRestrictionWsDTO"
          }
        }
      }
    },
    "PromotionRestrictionWsDTO": {
      "title": "PromotionRestrictionWsDTO",
      "type": "object",
      "properties": {
        "restrictionType": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        }
      }
    },
    "VariantOptionWsDTO": {
      "title": "VariantOptionWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "stock": {
          "$ref": "#/definitions/StockWsDTO"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "priceData": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "variantOptionQualifiers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantOptionQualifierWsDTO"
          }
        }
      }
    },
    "VariantOptionQualifierWsDTO": {
      "title": "VariantOptionQualifierWsDTO",
      "type": "object",
      "properties": {
        "qualifier": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "value": {
          "description": "",
          "type": "string"
        },
        "image": {
          "$ref": "#/definitions/ImageWsDTO"
        }
      }
    },
    "BaseOptionWsDTO": {
      "title": "BaseOptionWsDTO",
      "type": "object",
      "properties": {
        "variantType": {
          "description": "",
          "type": "string"
        },
        "options": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantOptionWsDTO"
          }
        },
        "selected": {
          "$ref": "#/definitions/VariantOptionWsDTO"
        }
      }
    },
    "ProductReferenceWsDTO": {
      "title": "ProductReferenceWsDTO",
      "type": "object",
      "properties": {
        "preselected": {
          "description": "",
          "type": "boolean"
        },
        "referenceType": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "target": {
          "$ref": "#/definitions/ProductWsDTO"
        }
      }
    },
    "VariantMatrixElementWsDTO": {
      "title": "VariantMatrixElementWsDTO",
      "type": "object",
      "properties": {
        "variantValueCategory": {
          "$ref": "#/definitions/VariantValueCategoryWsDTO"
        },
        "parentVariantCategory": {
          "$ref": "#/definitions/VariantCategoryWsDTO"
        },
        "variantOption": {
          "$ref": "#/definitions/VariantOptionWsDTO"
        }
      }
    },
    "VariantValueCategoryWsDTO": {
      "title": "VariantValueCategoryWsDTO",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "sequence": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "superCategories": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantCategoryWsDTO"
          }
        }
      }
    },
    "VariantCategoryWsDTO": {
      "title": "VariantCategoryWsDTO",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "hasImage": {
          "description": "",
          "type": "boolean"
        },
        "priority": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "PriceRangeWsDTO": {
      "title": "PriceRangeWsDTO",
      "type": "object",
      "properties": {
        "maxPrice": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "minPrice": {
          "$ref": "#/definitions/PriceWsDTO"
        }
      }
    },
    "OrderStatusUpdateElementListWsDTO": {
      "title": "OrderStatusUpdateElementListWsDTO",
      "type": "object",
      "properties": {
        "orderStatusUpdateElements": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderStatusUpdateElementWsDTO"
          }
        }
      }
    },
    "OrderStatusUpdateElementWsDTO": {
      "title": "OrderStatusUpdateElementWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "baseSiteId": {
          "description": "",
          "type": "string"
        }
      }
    },
    "LanguageListWsDTO": {
      "title": "LanguageListWsDTO",
      "type": "object",
      "properties": {
        "languages": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/LanguageWsDTO"
          }
        }
      }
    },
    "OrderWsDTO": {
      "title": "OrderWsDTO",
      "type": "object",
      "properties": {
        "created": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "statusDisplay": {
          "description": "",
          "type": "string"
        },
        "guestCustomer": {
          "description": "",
          "type": "boolean"
        },
        "consignments": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsignmentWsDTO"
          }
        },
        "deliveryStatus": {
          "description": "",
          "type": "string"
        },
        "deliveryStatusDisplay": {
          "description": "",
          "type": "string"
        },
        "unconsignedEntries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEntryWsDTO"
          }
        },
        "code": {
          "description": "",
          "type": "string"
        },
        "net": {
          "description": "",
          "type": "boolean"
        },
        "totalPriceWithTax": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "totalPrice": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "totalTax": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "subTotal": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "deliveryCost": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "entries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEntryWsDTO"
          }
        },
        "totalItems": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "deliveryMode": {
          "$ref": "#/definitions/DeliveryModeWsDTO"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/AddressWsDTO"
        },
        "paymentInfo": {
          "$ref": "#/definitions/PaymentDetailsWsDTO"
        },
        "appliedOrderPromotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionResultWsDTO"
          }
        },
        "appliedProductPromotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionResultWsDTO"
          }
        },
        "productDiscounts": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "orderDiscounts": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "totalDiscounts": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "site": {
          "description": "",
          "type": "string"
        },
        "store": {
          "description": "",
          "type": "string"
        },
        "guid": {
          "description": "",
          "type": "string"
        },
        "calculated": {
          "description": "",
          "type": "boolean"
        },
        "appliedVouchers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherWsDTO"
          }
        },
        "user": {
          "$ref": "#/definitions/PrincipalWsDTO"
        },
        "pickupOrderGroups": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PickupOrderEntryGroupWsDTO"
          }
        },
        "deliveryOrderGroups": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryOrderEntryGroupWsDTO"
          }
        },
        "pickupItemsQuantity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "deliveryItemsQuantity": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ConsignmentWsDTO": {
      "title": "ConsignmentWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "trackingID": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "statusDate": {
          "description": "",
          "type": "string"
        },
        "entries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConsignmentEntryWsDTO"
          }
        },
        "shippingAddress": {
          "$ref": "#/definitions/AddressWsDTO"
        },
        "deliveryPointOfService": {
          "$ref": "#/definitions/PointOfServiceWsDTO"
        }
      }
    },
    "ConsignmentEntryWsDTO": {
      "title": "ConsignmentEntryWsDTO",
      "type": "object",
      "properties": {
        "orderEntry": {
          "$ref": "#/definitions/OrderEntryWsDTO"
        },
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "shippedQuantity": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "OrderEntryWsDTO": {
      "title": "OrderEntryWsDTO",
      "type": "object",
      "properties": {
        "entryNumber": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "basePrice": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "totalPrice": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "product": {
          "$ref": "#/definitions/ProductWsDTO"
        },
        "updateable": {
          "description": "",
          "type": "boolean"
        },
        "deliveryMode": {
          "$ref": "#/definitions/DeliveryModeWsDTO"
        },
        "deliveryPointOfService": {
          "$ref": "#/definitions/PointOfServiceWsDTO"
        }
      }
    },
    "DeliveryModeWsDTO": {
      "title": "DeliveryModeWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "deliveryCost": {
          "$ref": "#/definitions/PriceWsDTO"
        }
      }
    },
    "PointOfServiceWsDTO": {
      "title": "PointOfServiceWsDTO",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "displayName": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "openingHours": {
          "$ref": "#/definitions/OpeningScheduleWsDTO"
        },
        "storeContent": {
          "description": "",
          "type": "string"
        },
        "features": {
          "description": "",
          "type": "object"
        },
        "geoPoint": {
          "$ref": "#/definitions/GeoPointWsDTO"
        },
        "formattedDistance": {
          "description": "",
          "type": "string"
        },
        "distanceKm": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "mapIcon": {
          "$ref": "#/definitions/ImageWsDTO"
        },
        "address": {
          "$ref": "#/definitions/AddressWsDTO"
        },
        "storeImages": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageWsDTO"
          }
        }
      }
    },
    "OpeningScheduleWsDTO": {
      "title": "OpeningScheduleWsDTO",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "code": {
          "description": "",
          "type": "string"
        },
        "weekDayOpeningList": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/WeekdayOpeningDayWsDTO"
          }
        },
        "specialDayOpeningList": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SpecialOpeningDayWsDTO"
          }
        }
      }
    },
    "WeekdayOpeningDayWsDTO": {
      "title": "WeekdayOpeningDayWsDTO",
      "type": "object",
      "properties": {
        "weekDay": {
          "description": "",
          "type": "string"
        },
        "closed": {
          "description": "",
          "type": "boolean"
        },
        "openingTime": {
          "$ref": "#/definitions/TimeWsDTO"
        },
        "closingTime": {
          "$ref": "#/definitions/TimeWsDTO"
        }
      }
    },
    "TimeWsDTO": {
      "title": "TimeWsDTO",
      "type": "object",
      "properties": {
        "hour": {
          "description": "",
          "type": "string"
        },
        "minute": {
          "description": "",
          "type": "string"
        },
        "formattedHour": {
          "description": "",
          "type": "string"
        }
      }
    },
    "SpecialOpeningDayWsDTO": {
      "title": "SpecialOpeningDayWsDTO",
      "type": "object",
      "properties": {
        "date": {
          "description": "",
          "type": "string"
        },
        "formattedDate": {
          "description": "",
          "type": "string"
        },
        "closed": {
          "description": "",
          "type": "boolean"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "comment": {
          "description": "",
          "type": "string"
        },
        "openingTime": {
          "$ref": "#/definitions/TimeWsDTO"
        },
        "closingTime": {
          "$ref": "#/definitions/TimeWsDTO"
        }
      }
    },
    "GeoPointWsDTO": {
      "title": "GeoPointWsDTO",
      "type": "object",
      "properties": {
        "latitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "longitude": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "PaymentDetailsWsDTO": {
      "title": "PaymentDetailsWsDTO",
      "type": "object",
      "properties": {
        "id": {
          "description": "",
          "type": "string"
        },
        "accountHolderName": {
          "description": "",
          "type": "string"
        },
        "cardType": {
          "$ref": "#/definitions/CardTypeWsDTO"
        },
        "cardNumber": {
          "description": "",
          "type": "string"
        },
        "startMonth": {
          "description": "",
          "type": "string"
        },
        "startYear": {
          "description": "",
          "type": "string"
        },
        "expiryMonth": {
          "description": "",
          "type": "string"
        },
        "expiryYear": {
          "description": "",
          "type": "string"
        },
        "issueNumber": {
          "description": "",
          "type": "string"
        },
        "subscriptionId": {
          "description": "",
          "type": "string"
        },
        "saved": {
          "description": "",
          "type": "boolean"
        },
        "defaultPayment": {
          "description": "",
          "type": "boolean"
        },
        "billingAddress": {
          "$ref": "#/definitions/AddressWsDTO"
        }
      }
    },
    "PromotionResultWsDTO": {
      "title": "PromotionResultWsDTO",
      "type": "object",
      "properties": {
        "description": {
          "description": "",
          "type": "string"
        },
        "promotion": {
          "$ref": "#/definitions/PromotionWsDTO"
        },
        "consumedEntries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionOrderEntryConsumedWsDTO"
          }
        }
      }
    },
    "PromotionOrderEntryConsumedWsDTO": {
      "title": "PromotionOrderEntryConsumedWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "adjustedUnitPrice": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "orderEntryNumber": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "VoucherWsDTO": {
      "title": "VoucherWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "voucherCode": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "value": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "valueFormatted": {
          "description": "",
          "type": "string"
        },
        "valueString": {
          "description": "",
          "type": "string"
        },
        "freeShipping": {
          "description": "",
          "type": "boolean"
        },
        "currency": {
          "$ref": "#/definitions/CurrencyWsDTO"
        },
        "appliedValue": {
          "$ref": "#/definitions/PriceWsDTO"
        }
      }
    },
    "PickupOrderEntryGroupWsDTO": {
      "title": "PickupOrderEntryGroupWsDTO",
      "type": "object",
      "properties": {
        "deliveryPointOfService": {
          "$ref": "#/definitions/PointOfServiceWsDTO"
        },
        "distance": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "totalPriceWithTax": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "entries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEntryWsDTO"
          }
        },
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "DeliveryOrderEntryGroupWsDTO": {
      "title": "DeliveryOrderEntryGroupWsDTO",
      "type": "object",
      "properties": {
        "deliveryAddress": {
          "$ref": "#/definitions/AddressWsDTO"
        },
        "totalPriceWithTax": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "entries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEntryWsDTO"
          }
        },
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ProductExpressUpdateElementListWsDTO": {
      "title": "ProductExpressUpdateElementListWsDTO",
      "type": "object",
      "properties": {
        "productExpressUpdateElements": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductExpressUpdateElementWsDTO"
          }
        }
      }
    },
    "ProductExpressUpdateElementWsDTO": {
      "title": "ProductExpressUpdateElementWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "catalogId": {
          "description": "",
          "type": "string"
        },
        "catalogVersion": {
          "description": "",
          "type": "string"
        }
      }
    },
    "ProductSearchPageWsDTO": {
      "title": "ProductSearchPageWsDTO",
      "description": "POJO containing the result page for product search.",
      "type": "object",
      "properties": {
        "freeTextSearch": {
          "description": "",
          "type": "string"
        },
        "categoryCode": {
          "description": "",
          "type": "string"
        },
        "keywordRedirectUrl": {
          "description": "",
          "type": "string"
        },
        "spellingSuggestion": {
          "$ref": "#/definitions/SpellingSuggestionWsDTO"
        },
        "products": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductWsDTO"
          }
        },
        "sorts": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortWsDTO"
          }
        },
        "pagination": {
          "$ref": "#/definitions/PaginationWsDTO"
        },
        "currentQuery": {
          "$ref": "#/definitions/SearchStateWsDTO"
        },
        "breadcrumbs": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BreadcrumbWsDTO"
          }
        },
        "facets": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetWsDTO"
          }
        }
      }
    },
    "SpellingSuggestionWsDTO": {
      "title": "SpellingSuggestionWsDTO",
      "type": "object",
      "properties": {
        "suggestion": {
          "description": "",
          "type": "string"
        },
        "query": {
          "description": "",
          "type": "string"
        }
      }
    },
    "SortWsDTO": {
      "title": "SortWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "selected": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "PaginationWsDTO": {
      "title": "PaginationWsDTO",
      "type": "object",
      "properties": {
        "totalPages": {
          "description": "The total number of pages. This is the number of pages, each of pageSize, required to display the totalResults.",
          "type": "number",
          "format": "double"
        },
        "totalResults": {
          "description": "The total number of matched results across all pages.",
          "type": "number",
          "format": "double"
        },
        "pageSize": {
          "description": "The number of results per page. A page may have less results if there are less than a full page of results, only on the last page in the results.",
          "type": "number",
          "format": "double"
        },
        "currentPage": {
          "description": "The current page number. The first page is number zero (0), the second page is number one (1), and so on.",
          "type": "number",
          "format": "double"
        },
        "sort": {
          "description": "The selected sort code.",
          "type": "string"
        }
      }
    },
    "SearchStateWsDTO": {
      "title": "SearchStateWsDTO",
      "type": "object",
      "properties": {
        "url": {
          "description": "",
          "type": "string"
        },
        "query": {
          "$ref": "#/definitions/SearchQueryWsDTO"
        }
      }
    },
    "SearchQueryWsDTO": {
      "title": "SearchQueryWsDTO",
      "type": "object",
      "properties": {
        "value": {
          "description": "",
          "type": "string"
        }
      }
    },
    "BreadcrumbWsDTO": {
      "title": "BreadcrumbWsDTO",
      "type": "object",
      "properties": {
        "facetCode": {
          "description": "",
          "type": "string"
        },
        "facetName": {
          "description": "",
          "type": "string"
        },
        "facetValueCode": {
          "description": "",
          "type": "string"
        },
        "facetValueName": {
          "description": "",
          "type": "string"
        },
        "removeQuery": {
          "$ref": "#/definitions/SearchStateWsDTO"
        },
        "truncateQuery": {
          "$ref": "#/definitions/SearchStateWsDTO"
        }
      }
    },
    "FacetWsDTO": {
      "title": "FacetWsDTO",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "priority": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "category": {
          "description": "",
          "type": "boolean"
        },
        "multiSelect": {
          "description": "",
          "type": "boolean"
        },
        "visible": {
          "description": "",
          "type": "boolean"
        },
        "topValues": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetValueWsDTO"
          }
        },
        "values": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FacetValueWsDTO"
          }
        }
      }
    },
    "FacetValueWsDTO": {
      "title": "FacetValueWsDTO",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        },
        "count": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "query": {
          "$ref": "#/definitions/SearchStateWsDTO"
        },
        "selected": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "SuggestionListWsDTO": {
      "title": "SuggestionListWsDTO",
      "type": "object",
      "properties": {
        "suggestions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SuggestionWsDTO"
          }
        }
      }
    },
    "SuggestionWsDTO": {
      "title": "SuggestionWsDTO",
      "type": "object",
      "properties": {
        "value": {
          "description": "",
          "type": "string"
        }
      }
    },
    "ProductReferenceListWsDTO": {
      "title": "ProductReferenceListWsDTO",
      "type": "object",
      "properties": {
        "references": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductReferenceWsDTO173"
          }
        }
      }
    },
    "ProductReferenceWsDTO173": {
      "title": "ProductReferenceWsDTO173",
      "type": "object",
      "properties": {
        "preselected": {
          "description": "",
          "type": "boolean"
        },
        "referenceType": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "ProductWsDTO174": {
      "title": "ProductWsDTO174",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "purchasable": {
          "description": "",
          "type": "boolean"
        },
        "stock": {
          "$ref": "#/definitions/StockWsDTO"
        },
        "futureStocks": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/FutureStockWsDTO"
          }
        },
        "availableForPickup": {
          "description": "",
          "type": "boolean"
        },
        "averageRating": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "numberOfReviews": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "summary": {
          "description": "",
          "type": "string"
        },
        "manufacturer": {
          "description": "",
          "type": "string"
        },
        "variantType": {
          "description": "",
          "type": "string"
        },
        "price": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "baseProduct": {
          "description": "",
          "type": "string"
        },
        "images": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageWsDTO"
          }
        },
        "categories": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CategoryWsDTO"
          }
        },
        "reviews": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReviewWsDTO"
          }
        },
        "classifications": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ClassificationWsDTO"
          }
        },
        "potentialPromotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionWsDTO"
          }
        },
        "variantOptions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantOptionWsDTO"
          }
        },
        "baseOptions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/BaseOptionWsDTO"
          }
        },
        "volumePricesFlag": {
          "description": "",
          "type": "boolean"
        },
        "volumePrices": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PriceWsDTO"
          }
        },
        "productReferences": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ProductReferenceWsDTO173"
          }
        },
        "variantMatrix": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VariantMatrixElementWsDTO"
          }
        },
        "priceRange": {
          "$ref": "#/definitions/PriceRangeWsDTO"
        },
        "multidimensional": {
          "description": "",
          "type": "boolean"
        }
      }
    },
    "ReviewListWsDTO": {
      "title": "ReviewListWsDTO",
      "type": "object",
      "properties": {
        "reviews": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReviewWsDTO"
          }
        }
      }
    },
    "ReviewWsDTO208": {
      "title": "ReviewWsDTO208",
      "type": "object",
      "properties": {
        "headline": {
          "description": "",
          "type": "string"
        },
        "comment": {
          "description": "",
          "type": "string"
        },
        "rating": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "date": {
          "description": "",
          "type": "string"
        },
        "alias": {
          "description": "",
          "type": "string"
        }
      }
    },
    "StoreFinderStockSearchPageWsDTO": {
      "title": "StoreFinderStockSearchPageWsDTO",
      "type": "object",
      "properties": {
        "stores": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PointOfServiceStockWsDTO"
          }
        },
        "sorts": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortWsDTO"
          }
        },
        "pagination": {
          "$ref": "#/definitions/PaginationWsDTO"
        },
        "locationText": {
          "description": "",
          "type": "string"
        },
        "sourceLatitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "sourceLongitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "boundNorthLatitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "boundEastLongitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "boundSouthLatitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "boundWestLongitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "product": {
          "$ref": "#/definitions/ProductWsDTO"
        }
      }
    },
    "PointOfServiceStockWsDTO": {
      "title": "PointOfServiceStockWsDTO",
      "type": "object",
      "properties": {
        "stockInfo": {
          "$ref": "#/definitions/StockWsDTO"
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "displayName": {
          "description": "",
          "type": "string"
        },
        "url": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "openingHours": {
          "$ref": "#/definitions/OpeningScheduleWsDTO"
        },
        "storeContent": {
          "description": "",
          "type": "string"
        },
        "features": {
          "description": "",
          "type": "object"
        },
        "geoPoint": {
          "$ref": "#/definitions/GeoPointWsDTO"
        },
        "formattedDistance": {
          "description": "",
          "type": "string"
        },
        "distanceKm": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "mapIcon": {
          "$ref": "#/definitions/ImageWsDTO"
        },
        "address": {
          "$ref": "#/definitions/AddressWsDTO"
        },
        "storeImages": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ImageWsDTO"
          }
        }
      }
    },
    "PromotionListWsDTO": {
      "title": "PromotionListWsDTO",
      "type": "object",
      "properties": {
        "promotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionWsDTO"
          }
        }
      }
    },
    "StoreFinderSearchPageWsDTO": {
      "title": "StoreFinderSearchPageWsDTO",
      "type": "object",
      "properties": {
        "stores": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PointOfServiceWsDTO"
          }
        },
        "sorts": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortWsDTO"
          }
        },
        "pagination": {
          "$ref": "#/definitions/PaginationWsDTO"
        },
        "locationText": {
          "description": "",
          "type": "string"
        },
        "sourceLatitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "sourceLongitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "boundNorthLatitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "boundEastLongitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "boundSouthLatitude": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "boundWestLongitude": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "TitleListWsDTO": {
      "title": "TitleListWsDTO",
      "type": "object",
      "properties": {
        "titles": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/TitleWsDTO"
          }
        }
      }
    },
    "TitleWsDTO": {
      "title": "TitleWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "UserSignUpWsDTO": {
      "title": "UserSignUpWsDTO",
      "type": "object",
      "properties": {
        "uid": {
          "description": "",
          "type": "string"
        },
        "firstName": {
          "description": "",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "type": "string"
        },
        "titleCode": {
          "description": "",
          "type": "string"
        },
        "password": {
          "description": "",
          "type": "string"
        }
      }
    },
    "UserWsDTO286": {
      "title": "UserWsDTO286",
      "type": "object",
      "properties": {
        "titleCode": {
          "description": "",
          "type": "string"
        },
        "firstName": {
          "description": "",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "type": "string"
        },
        "currency": {
          "$ref": "#/definitions/Currency"
        },
        "language": {
          "$ref": "#/definitions/Language"
        }
      }
    },
    "Currency": {
      "title": "Currency",
      "type": "object",
      "properties": {
        "isocode": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Language": {
      "title": "Language",
      "type": "object",
      "properties": {
        "isocode": {
          "description": "",
          "type": "string"
        }
      }
    },
    "AddressListWsDTO": {
      "title": "AddressListWsDTO",
      "type": "object",
      "properties": {
        "addresses": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/AddressWsDTO"
          }
        }
      }
    },
    "AddressWsDTO296": {
      "title": "AddressWsDTO296",
      "type": "object",
      "properties": {
        "titleCode": {
          "description": "",
          "type": "string"
        },
        "firstName": {
          "description": "",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "type": "string"
        },
        "line1": {
          "description": "",
          "type": "string"
        },
        "line2": {
          "description": "",
          "type": "string"
        },
        "town": {
          "description": "",
          "type": "string"
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "postalCode": {
          "description": "",
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/Country"
        }
      }
    },
    "Region": {
      "title": "Region",
      "type": "object",
      "properties": {
        "isocode": {
          "description": "",
          "type": "string"
        }
      }
    },
    "Country": {
      "title": "Country",
      "type": "object",
      "properties": {
        "isocode": {
          "description": "",
          "type": "string"
        }
      }
    },
    "CartListWsDTO": {
      "title": "CartListWsDTO",
      "type": "object",
      "properties": {
        "carts": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/CartWsDTO"
          }
        }
      }
    },
    "CartWsDTO": {
      "title": "CartWsDTO",
      "type": "object",
      "properties": {
        "totalUnitCount": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "potentialOrderPromotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionResultWsDTO"
          }
        },
        "potentialProductPromotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionResultWsDTO"
          }
        },
        "name": {
          "description": "",
          "type": "string"
        },
        "description": {
          "description": "",
          "type": "string"
        },
        "expirationTime": {
          "description": "",
          "type": "string"
        },
        "saveTime": {
          "description": "",
          "type": "string"
        },
        "savedBy": {
          "$ref": "#/definitions/PrincipalWsDTO"
        },
        "code": {
          "description": "",
          "type": "string"
        },
        "net": {
          "description": "",
          "type": "boolean"
        },
        "totalPriceWithTax": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "totalPrice": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "totalTax": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "subTotal": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "deliveryCost": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "entries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEntryWsDTO"
          }
        },
        "totalItems": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "deliveryMode": {
          "$ref": "#/definitions/DeliveryModeWsDTO"
        },
        "deliveryAddress": {
          "$ref": "#/definitions/AddressWsDTO"
        },
        "paymentInfo": {
          "$ref": "#/definitions/PaymentDetailsWsDTO"
        },
        "appliedOrderPromotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionResultWsDTO"
          }
        },
        "appliedProductPromotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionResultWsDTO"
          }
        },
        "productDiscounts": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "orderDiscounts": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "totalDiscounts": {
          "$ref": "#/definitions/PriceWsDTO"
        },
        "site": {
          "description": "",
          "type": "string"
        },
        "store": {
          "description": "",
          "type": "string"
        },
        "guid": {
          "description": "",
          "type": "string"
        },
        "calculated": {
          "description": "",
          "type": "boolean"
        },
        "appliedVouchers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherWsDTO"
          }
        },
        "user": {
          "$ref": "#/definitions/PrincipalWsDTO"
        },
        "pickupOrderGroups": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PickupOrderEntryGroupWsDTO"
          }
        },
        "deliveryOrderGroups": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryOrderEntryGroupWsDTO"
          }
        },
        "pickupItemsQuantity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "deliveryItemsQuantity": {
          "description": "",
          "type": "number",
          "format": "double"
        }
      }
    },
    "SaveCartResultWsDTO": {
      "title": "SaveCartResultWsDTO",
      "type": "object",
      "properties": {
        "savedCartData": {
          "$ref": "#/definitions/CartWsDTO"
        }
      }
    },
    "DeliveryModeListWsDTO": {
      "title": "DeliveryModeListWsDTO",
      "type": "object",
      "properties": {
        "deliveryModes": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/DeliveryModeWsDTO"
          }
        }
      }
    },
    "OrderEntryListWsDTO": {
      "title": "OrderEntryListWsDTO",
      "type": "object",
      "properties": {
        "orderEntries": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderEntryWsDTO"
          }
        }
      }
    },
    "OrderEntryWsDTO542": {
      "title": "OrderEntryWsDTO542",
      "type": "object",
      "properties": {
        "quantity": {
          "description": "",
          "type": "number",
          "format": "double"
        },
        "product": {
          "$ref": "#/definitions/Product"
        },
        "deliveryPointOfService": {
          "$ref": "#/definitions/DeliveryPointOfService"
        }
      }
    },
    "Product": {
      "title": "Product",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        }
      }
    },
    "DeliveryPointOfService": {
      "title": "DeliveryPointOfService",
      "type": "object",
      "properties": {
        "name": {
          "description": "",
          "type": "string"
        }
      }
    },
    "PaymentDetailsWsDTO640": {
      "title": "PaymentDetailsWsDTO640",
      "type": "object",
      "properties": {
        "accountHolderName": {
          "description": "",
          "type": "string"
        },
        "cardType": {
          "description": "",
          "type": "object"
        },
        "cardNumber": {
          "description": "",
          "type": "string"
        },
        "startMonth": {
          "description": "",
          "type": "string"
        },
        "startYear": {
          "description": "",
          "type": "string"
        },
        "expiryMonth": {
          "description": "",
          "type": "string"
        },
        "expiryYear": {
          "description": "",
          "type": "string"
        },
        "issueNumber": {
          "description": "",
          "type": "string"
        },
        "subscriptionId": {
          "description": "",
          "type": "string"
        },
        "saved": {
          "description": "",
          "type": "boolean"
        },
        "billingAddress": {
          "$ref": "#/definitions/BillingAddress"
        }
      }
    },
    "BillingAddress": {
      "title": "BillingAddress",
      "type": "object",
      "properties": {
        "titleCode": {
          "description": "",
          "type": "string"
        },
        "firstName": {
          "description": "",
          "type": "string"
        },
        "lastName": {
          "description": "",
          "type": "string"
        },
        "line1": {
          "description": "",
          "type": "string"
        },
        "line2": {
          "description": "",
          "type": "string"
        },
        "town": {
          "description": "",
          "type": "string"
        },
        "region": {
          "$ref": "#/definitions/Region"
        },
        "postalCode": {
          "description": "",
          "type": "string"
        },
        "country": {
          "$ref": "#/definitions/Country"
        }
      }
    },
    "PromotionResultListWsDTO": {
      "title": "PromotionResultListWsDTO",
      "type": "object",
      "properties": {
        "promotions": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PromotionResultWsDTO"
          }
        }
      }
    },
    "VoucherListWsDTO": {
      "title": "VoucherListWsDTO",
      "type": "object",
      "properties": {
        "vouchers": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VoucherWsDTO"
          }
        }
      }
    },
    "OrderHistoryListWsDTO": {
      "title": "OrderHistoryListWsDTO",
      "type": "object",
      "properties": {
        "orders": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/OrderHistoryWsDTO"
          }
        },
        "sorts": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/SortWsDTO"
          }
        },
        "pagination": {
          "$ref": "#/definitions/PaginationWsDTO"
        }
      }
    },
    "OrderHistoryWsDTO": {
      "title": "OrderHistoryWsDTO",
      "type": "object",
      "properties": {
        "code": {
          "description": "",
          "type": "string"
        },
        "status": {
          "description": "",
          "type": "string"
        },
        "statusDisplay": {
          "description": "",
          "type": "string"
        },
        "placed": {
          "description": "",
          "type": "string"
        },
        "guid": {
          "description": "",
          "type": "string"
        },
        "total": {
          "$ref": "#/definitions/PriceWsDTO"
        }
      }
    },
    "PaymentDetailsListWsDTO": {
      "title": "PaymentDetailsListWsDTO",
      "type": "object",
      "properties": {
        "payments": {
          "description": "",
          "type": "array",
          "items": {
            "$ref": "#/definitions/PaymentDetailsWsDTO"
          }
        }
      }
    }
  }
}